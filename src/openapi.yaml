openapi: 3.0.1
info:
  title: Zero Networks
  version: 1.0.2
  description: APIs for Zero Networks
servers:
  - url: 'https://portal.zeronetworks.com/api/v1'
    description: production
paths:
  /activities/logon:
    get:
      operationId: LogonActivities_List
      summary: List Logon Activities
      description: Returns a list of logon activites.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logonActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/logon/export:
    post:
      operationId: LogonActivities_Export
      summary: Export logon activities
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  '/activities/logon/export/csv/{exportId}':
    get:
      operationId: LogonActivitiesExport_Get
      summary: Download logon activities export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
      security:
        - api_key: []
      tags:
        - Activities
  /activities/logon/filters:
    get:
      operationId: LogonActivitiesFilters_List
      summary: Get logon activity filters
      description: Returns the filters that can be used for logon activities.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/network:
    get:
      operationId: NetworkActivities_List
      summary: List Network Activities
      description: Returns a list of network activites.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/network/export:
    post:
      operationId: NetworkActivities_Export
      summary: Export network activities
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  '/activities/network/export/csv/{exportId}':
    get:
      operationId: NetworkActivitiesExport_Get
      summary: Download network activities export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
      security:
        - api_key: []
      tags:
        - Activities
  /activities/network/filters:
    get:
      operationId: NetworkActivitiesFilters_List
      summary: Get network activity filters
      description: Returns the filters that can be used for network activities.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc:
    get:
      operationId: RPCActivities_List
      summary: List RPC Activities
      description: Returns a list of RPC activites.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/export:
    post:
      operationId: RPCActivities_Export
      summary: Export RPC activities
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  '/activities/rpc/export/csv/{exportId}':
    get:
      operationId: RPCActivitiesExport_Get
      summary: Download RPC activities export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/filters:
    get:
      operationId: RPCActivitiesFilters_List
      summary: Get RPC activity filters
      description: Returns the filters that can be used for RPC activities.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/filters/interface-candidates:
    get:
      operationId: RPCActivitiesInterfaceCandidatesFilters_List
      summary: Get RPC activity Interface Name filters
      description: Returns the interface name filters that can be used for RPC activities.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/filters/op-candidates:
    get:
      operationId: RPCActivitiesOperationFilters_List
      summary: Get RPC activity operation filters
      description: Returns the operation filters that can be used for RPC activities.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /ai/next-batch:
    get:
      operationId: AINextBatch_Get
      summary: AI Next Batch
      description: Returns a date in epoch(ms) for the next batch of AI rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nextBatch'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
  /assets:
    get:
      operationId: Assets_List
      summary: Assets
      description: Returns a list of assets.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/withCountParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/protect:
    post:
      operationId: Assets_Protect
      summary: Move asset from learning to protection
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Protected
  /assets/actions/protect/validate:
    post:
      operationId: AssetsProtect_Validate
      summary: Validate assets for protection
      description: Returns a number of assets that are valid for protection.
      requestBody:
        description: Array of assetIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/queue:
    post:
      operationId: Assets_Queue
      summary: Move asset from monitored to learning
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Monitored
    put:
      operationId: Assets_ExtendQueue
      summary: Extend asset learning period
      description: Returns an empty object.
      requestBody:
        description: Array of assetIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueExtendBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Learning
  /assets/actions/unprotect:
    post:
      operationId: Assets_Unprotect
      summary: Unprotect asset
      description: Returns an empty object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Protected
  /assets/actions/unprotect/validate:
    post:
      operationId: AssetsUnprotect_Validate
      summary: Validate assets for removing from protection
      description: Returns a number of assets that are valid to unprotect.
      requestBody:
        description: Array of assetIds to remove from protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetBody'
            examples: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Protected
  /assets/export:
    post:
      operationId: Assets_Export
      summary: Export assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/export/csv/{exportId}':
    get:
      operationId: AssetsExport_Get
      summary: Download assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Assets
  /assets/filters:
    get:
      operationId: AssetsFilters_List
      summary: Assets Filters
      description: Returns the filters that can be used for assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/linux:
    post:
      operationId: AssetsLinux_Create
      summary: Create linux asset
      description: Returns the assetId of the created Linux asset.
      requestBody:
        description: Linux asset details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/linuxBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetIds'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Linux
  '/assets/{assetId}':
    get:
      operationId: Asset_Get
      summary: Get an asset
      description: Returns the properties of an asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/actions/protect':
    post:
      operationId: Asset_Protect
      summary: Move specific asset from learning to protection
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/actions/protect/validate':
    post:
      operationId: AssetProtect_Validate
      summary: Validate specific asset for protection
      description: Returns a number of assets that are valid for protection.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/actions/queue':
    put:
      operationId: AssetExtendQueue_Learn
      summary: Extend asset learning
      description: Extend asset learning
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Queue days to extand by
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueAssetExtendBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    post:
      operationId: AssetQueue_Learn
      summary: Extend asset learning
      description: Extend asset learning
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Queue days
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueAssetBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/actions/retry-health':
    post:
      operationId: AssetRetryHealth_Invoke
      summary: Retry asset health checks
      description: Retry asset health checks
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/actions/unprotect':
    post:
      operationId: Asset_Unprotect
      summary: Unprotect a specific asset
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/actions/unprotect/validate':
    post:
      operationId: AssetUnprotect_Validate
      summary: Validate a specific asset for removing from protection
      description: Returns a number of assets that are valid to unprotect.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/activities/logon':
    get:
      operationId: AssetLogonActivities_List
      summary: List a specific Logon Activities
      description: Returns a list of logon activites for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logonActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/activities/logon/export':
    post:
      operationId: AssetLogonActivities_Export
      summary: Export logon activities for a specific asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/activities/logon/export/csv/{exportId}':
    get:
      operationId: AssetLogonActivitiesExport_Get
      summary: Download logon activities for a specific asset export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/activities/logon/filters':
    get:
      operationId: AssetLogonActivitiesFilters_List
      summary: Get logon activity filters for a specific asset
      description: Returns the filters that can be used for logon activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/activities/network':
    get:
      operationId: AssetNetworkActivities_List
      summary: List Network Activities for a specific asset
      description: Returns a list of network activites for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/activities/network/export':
    post:
      operationId: AssetNetworkActivities_Export
      summary: Export network activities for a specific asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/activities/network/export/csv/{exportId}':
    get:
      operationId: AssetNetworkActivitiesExport_Get
      summary: Download network activities export for a specific asset
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/activities/network/filters':
    get:
      operationId: AssetNetworkActivitiesFilters_List
      summary: Get network activity filters for a specific asset
      description: Returns the filters that can be used for network activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/activities/rpc':
    get:
      operationId: AssetRPCActivities_List
      summary: List RPC Activities for a specific asset
      description: Returns a list of RPC activites for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/activities/rpc/export':
    post:
      operationId: AssetRPCActivities_Export
      summary: Export RPC activities for a specific asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/activities/rpc/export/csv/{exportId}':
    get:
      operationId: AssetRPCActivitiesExport_Get
      summary: Download RPC activities export for a specific asset
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/activities/rpc/filters':
    get:
      operationId: AssetRPCActivitiesFilters_List
      summary: Get RPC activity filters for a specific asset
      description: Returns the filters that can be used for RPC activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/activities/rpc/filters/interface-candidates':
    get:
      operationId: AssetRPCActivitiesInterfaceCandidatesFilters_List
      summary: Get RPC activity Interface Name filters for a specific asset
      description: Returns the interface name filters that can be used for RPC activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/activities/rpc/filters/op-candidates':
    get:
      operationId: AssetRPCActivitiesOperationFilters_List
      summary: Get RPC activity operation filters for a specific asset
      description: Returns the operation filters that can be used for RPC activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/ancestors':
    get:
      operationId: AssetMemberOf_Get
      summary: Get an asset ancestors
      description: Returns a list of groups the asset is a member of.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ancestors'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/analysis':
    get:
      operationId: AssetAnalysis_Get
      summary: Get an asset analysis
      description: Returns an object with asset analysis data.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/sortParameter'
        - $ref: '#/components/parameters/analysisDirectionParameter'
        - $ref: '#/components/parameters/connectionStateParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetAnalysis'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/analysis/export':
    post:
      operationId: AssetAnalysis_Export
      summary: Export asset analysis
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAnalysis'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/analysis/export/csv/{exportId}':
    get:
      operationId: AssetAnalysisExport_Get
      summary: Download asset analysis report
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/audit':
    get:
      operationId: AssetAudit_Get
      summary: Get a assets audits
      description: Returns a list of audits for the asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/orderParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auditList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/audit/export':
    post:
      operationId: AssetAudit_Export
      summary: Export assets audits
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/audit/export/csv/{exportId}':
    get:
      operationId: AssetAuditExport_Get
      summary: Download assets audit export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/audit/filters':
    get:
      operationId: AssetAuditsFilters_List
      summary: List Audit Filters for a specific asset
      description: Returns a list of filters for Audit events for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/listening-ports':
    get:
      operationId: AssetListeningPorts_List
      summary: List listening ports of asset
      description: List listening ports of an asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listeningPortsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/managers':
    get:
      operationId: AssetAssetManagers_List
      summary: Get managers of asset
      description: Get asset managers of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/managersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    post:
      operationId: AssetAssetManagers_Add
      summary: Add manager of asset
      description: Add an asset manager of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Array of managers to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetManagersBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/managers/{groupOrUserId}':
    delete:
      operationId: AssetAssetManagers_Delete
      summary: Remove manager of asset
      description: Remove an asset manager of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/groupOrUserIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/managers/candidates':
    get:
      operationId: AssetAssetManagersCandidates_List
      summary: Get manager candidates
      description: Get manager candidates for asset managers
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/inbound':
    get:
      operationId: AssetMFAInboundPolicies_List
      summary: Asset List Inbound MFA Policies
      description: Returns a list of inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    post:
      operationId: AssetMFAInboundPolicies_Create
      summary: Asset Add Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/inbound/{reactivePolicyId}':
    get:
      operationId: AssetMFAInboundPolicies_Get
      summary: Asset Get Inbound MFA Policy
      description: Returns a inbound MFA policy object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    put:
      operationId: AssetMFAInboundPolicies_Update
      summary: Asset Update Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    delete:
      operationId: AssetMFAInboundPolicies_Delete
      summary: Asset Remove Inbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/inbound/dst-candidates':
    get:
      operationId: AssetMFAInboundPoliciesDestinationCandidates_List
      summary: Asset Get destination assets for Inbound MFA Policy
      description: Returns a list of candidates for the destionation of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/inbound/excluded-src-candidates':
    get:
      operationId: AssetMFAInboundPoliciesExcludedSourceCandidates_List
      summary: Asset get excluded source asset candidates for Inbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/inbound/filters':
    get:
      operationId: AssetMFAInboundPoliciesFilters_List
      summary: Asset List Inbound MFA Policy Filters
      description: Returns a list of filters for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/inbound/filters/dst-candidates':
    get:
      operationId: AssetMFAInboundPoliciesDestinationCandidatesFilters_List
      summary: Asset Get Inbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/inbound/filters/src-candidates':
    get:
      operationId: AssetMFAInboundPoliciesSourceCandidatesFilters_List
      summary: Asset List Inbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/inbound/filters/src-users-candidates':
    get:
      operationId: AssetMFAInboundPoliciesSourceUsersCandidatesFilters_List
      summary: Asset Get Inbound MFA Policies Source Users Filters
      description: Resturns a list of filters for source users on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/inbound/mfa-methods':
    get:
      operationId: AssetMFAInboundPoliciesMFAMethods_List
      summary: Asset List Inbound MFA Policy Methods
      description: Returns a list of MFA methods for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/inbound/src-candidates':
    get:
      operationId: AssetMFAInboundPoliciesSourceCandidates_List
      summary: Asset List Inbound MFA Polcies Source Candidates
      description: Returns a list of source candidates on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/inbound/src-users-candidates':
    get:
      operationId: AssetMFAInboundPoliciesSourceUserCandidates_List
      summary: Asset List Inbound MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/outbound':
    get:
      operationId: AssetMFAOutboundPolicies_List
      summary: Asset List Outbound MFA Policies
      description: Returns a list of outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    post:
      operationId: AssetMFAOutboundPolicies_Create
      summary: Asset Add Outbound MFA Policy
      description: Returns a the properties of outbound MFA policy created.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/outbound/{reactivePolicyId}':
    get:
      operationId: AssetMFAOutboundPolicies_Get
      summary: Asset Get Outbound MFA Policy
      description: Returns the properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    put:
      operationId: AssetMFAOutboundPolicies_Update
      summary: Asset Update Outbound MFA Policy
      description: Returns the updated properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Reactive Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    delete:
      operationId: AssetMFAOutboundPolicies_Delete
      summary: Asset Remove Outbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/outbound/dst-candidates':
    get:
      operationId: AssetMFAOutboundPoliciesDestinationCandidates_List
      summary: Asset List Outbound MFA Policies Destination Candidates
      description: Returns a list of destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/outbound/excluded-src-candidates':
    get:
      operationId: AssetMFAOutboundPoliciesExcludedSourceCandidates_List
      summary: Asset get excluded source asset candidates for Outbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/outbound/filters':
    get:
      operationId: AssetMFAOutboundPoliciesFilters_Get
      summary: Asset List Outbound MFA Policies Filters
      description: Returns a list of filters for outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/outbound/filters/dst-candidates':
    get:
      operationId: AssetMFAOutboundPoliciesDestinationCandidatesFilters_List
      summary: Asset List Outbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/outbound/filters/src-candidates':
    get:
      operationId: AssetMFAOutboundPoliciesSourceCandidatesFilters_List
      summary: Asset Get Outbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/outbound/filters/src-users-candidates':
    get:
      operationId: AssetMFAOutboundPoliciesSourceUsersCandidatesFilters_List
      summary: Asset List Outbound MFA Policies Source Users Candidates Filters
      description: Returns a list of filsters for source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/outbound/mfa-methods':
    get:
      operationId: AssetMFAOutboundPoliciesMFAMethods_List
      summary: Asset List Outbound MFA Policies Methods
      description: Returns a list of MFA methods on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/outbound/src-candidates':
    get:
      operationId: AssetMFAOutboundPoliciesSourceCandidates_List
      summary: Asset List Outbound MFA Policies Source Candidates
      description: Returns a list of source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/reactive-policies/outbound/src-users-candidates':
    get:
      operationId: AssetMFAOutboundPoliciesSourceUserCandidates_List
      summary: Asset Get Outbound MFA Policies Source Users Candidates
      description: Returns a list of source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/distribution/{ruleId}':
    get:
      operationId: AssetRulesDistribution_Get
      summary: Get distribution of rule hit count for a specific asset
      description: Returns an object with rules distribution.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/ruleDirectionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleDistribution'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/history/{ruleId}':
    get:
      operationId: AssetRulesHistory_Get
      summary: Get a historic version of an rule for a specific asset
      description: Returns the properties of the previous version of the rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/updateIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historyRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-allow':
    get:
      operationId: AssetInboundAllowRules_List
      summary: Asset List Inbound Allow Rules
      description: Returns a list of Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/directionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    post:
      operationId: AssetInboundAllowRules_Create
      summary: Asset Create Inbound Allow Rule
      description: Returns the properties of the created Inbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-allow/export':
    post:
      operationId: AssetInboundAllowRules_Export
      summary: Asset Export Inbound Allow Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-allow/export/csv/{exportId}':
    get:
      operationId: AssetInboundAllowRulesExport_Get
      summary: Download assets inbound allow rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-allow/{ruleId}':
    get:
      operationId: AssetInboundAllowRule_Get
      summary: Asset Get Inbound Allow Rule
      description: Returns the properties of an Inbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    put:
      operationId: AssetInboundAllowRule_Update
      summary: Asset Update Inbound Allow Rule
      description: Returns the properties of the update Inbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    delete:
      operationId: AssetInboundAllowRule_Delete
      summary: Asset Remove Inbound Allow Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-allow/review/approve/{ruleId}':
    put:
      operationId: AssetInboundAllowRulesReview_Approve
      summary: Asset Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
  '/assets/{assetId}/protection/rules/inbound-allow/review/approve-with-changes/{ruleId}':
    put:
      operationId: AssetInboundAllowRulesReview_ApproveWithChanges
      summary: Asset Update Inbound Allow Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-allow/review/reject/{ruleId}':
    delete:
      operationId: AssetInboundAllowRulesReview_Deny
      summary: Asset ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/assets/{assetId}/protection/rules/inbound-allow/filters':
    get:
      operationId: AssetInboundAllowRulesFilters_List
      summary: Asset List Inbound Allow Rules Filters
      description: Returns a list of filters for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-allow/excluded-local-candidates':
    get:
      operationId: AssetInboundAllowRulesExcludedDestinationCandidates_List
      summary: Asset Get Inbound Allow Rules Excluded Destination Candidates
      description: Returns a list of excluded destionation candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-allow/local-candidates':
    get:
      operationId: AssetInboundAllowRulesDestinationCandidates_List
      summary: Asset List Inbound Allow Rules Destination Candidates
      description: Returns a list of destionation candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-allow/filters/local-candidates':
    get:
      operationId: AssetInboundAllowRulesDesinationCandidatesFilters_List
      summary: Asset List Inbound Allow Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-allow/remote-candidates':
    get:
      operationId: AssetInboundAllowRulesSourceCandidates_List
      summary: Asset List Inbound Allow Rules Source Candidates
      description: Returns a list of source candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-allow/filters/remote-candidates':
    get:
      operationId: AssetInboundAllowRulesSourceCandidatesFilters_List
      summary: Asset Get Inbound Allow Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-block':
    get:
      operationId: AssetInboundBlockRules_List
      summary: Asset List Inbound Block Rules
      description: Returns a list of Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/directionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    post:
      operationId: AssetInboundBlockRules_Create
      summary: Asset Create Inbound Block Rule
      description: Returns the properties of the created Inbound Block rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-block/export':
    post:
      operationId: AssetInboundBlockRules_Export
      summary: Asset Export Inbound Block Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-block/export/csv/{exportId}':
    get:
      operationId: AssetInboundBlockRulesExport_Get
      summary: Download assets inbound block rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-block/{ruleId}':
    get:
      operationId: AssetInboundBlockRule_Get
      summary: Asset Get Inbound Block Rule
      description: Returns the properties of the Inbound Block rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    put:
      operationId: AssetInboundBlockRule_Update
      summary: Asset Update Inbound Block Rule
      description: Returns the properties of the updated Inbound Block rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    delete:
      operationId: AssetInboundBlockRule_Delete
      summary: Asset Remove Inbound Block Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-block/review/approve/{ruleId}':
    put:
      operationId: AssetInboundBlockRulesReview_Approve
      summary: Asset Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
  '/assets/{assetId}/protection/rules/inbound-block/review/approve-with-changes/{ruleId}':
    put:
      operationId: AssetInboundBlockRulesReview_ApproveWithChanges
      summary: Asset Update Inbound Block Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-block/review/reject/{ruleId}':
    delete:
      operationId: AssetInboundBlockRulesReview_Deny
      summary: Asset ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/assets/{assetId}/protection/rules/inbound-block/filters':
    get:
      operationId: AssetInboundBlockRulesFilters_Get
      summary: Asset List Inbound Block Rules Filters
      description: Returns a list of filters for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-block/excluded-local-candidates':
    get:
      operationId: AssetInboundBlockRulesExcludedDestinationCandidates_List
      summary: Asset List Inbound Block Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-block/local-candidates':
    get:
      operationId: AssetInboundBlockRulesDestinationCandidates_List
      summary: Asset List Inbound Block Rules Desintation Candidates
      description: Returns a list of destination candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-block/filters/local-candidates':
    get:
      operationId: AssetInboundBlockRulesDestinationCandidatesFilters_List
      summary: Asset List Inbound Block Rules Desination Candidates Filters
      description: Returns a list of filters destination candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-block/remote-candidates':
    get:
      operationId: AssetInboundBlockRulesSourceCandidates_List
      summary: Asset List Inbound Block Rules Source Candidates
      description: Returns a list of source candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/inbound-block/filters/remote-candidates':
    get:
      operationId: AssetInboundBlockRulesSourceCandidatesFilters_List
      summary: Asset List Inbound Block Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound-block':
    get:
      operationId: AssetOutboundBlockRules_List
      summary: Asset List Outbound Block Rules
      description: Returns a list of outbound block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/directionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    post:
      operationId: AssetOutboundBlockRules_Create
      summary: Asset Create Outbound Block Rule
      description: Returns the properties of the created outbound block rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound-block/export':
    post:
      operationId: AssetOutboundBlockRules_Export
      summary: Asset Export Outbound Block Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound-block/export/csv/{exportId}':
    get:
      operationId: AssetOutboundBlockRulesExport_Get
      summary: Download assets outbound block rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound-block/{ruleId}':
    get:
      operationId: AssetOutboundBlockRule_Get
      summary: Asset Get Outbound Block Rule
      description: Returns the properties of an outbound block rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    put:
      operationId: AssetOutboundBlockRule_Update
      summary: Asset Update Outbound Block Rule
      description: Returns the properties of the updated outbound block rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    delete:
      operationId: AssetOutboundBlockRule_Delete
      summary: Asset Remove Outbound Block Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound-block/review/approve/{ruleId}':
    put:
      operationId: AssetOutboundBlockRulesReview_Approve
      summary: Asset Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
  '/assets/{assetId}/protection/rules/outbound-block/review/approve-with-changes/{ruleId}':
    put:
      operationId: AssetOutboundBlockRulesReview_ApproveWithChanges
      summary: Asset Update Outbound Block Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound-block/review/reject/{ruleId}':
    delete:
      operationId: AssetOutboundBlockRulesReview_Deny
      summary: Asset ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/assets/{assetId}/protection/rules/outbound-block/filters':
    get:
      operationId: AssetOutboundBlockRulesFilters_List
      summary: Asset List Outbound Block Rules Filters
      description: Returns a list of filters for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound-block/excluded-local-candidates':
    get:
      operationId: AssetOutboundBlockRulesExcludedSourceCandidates_List
      summary: Asset List Outbound Block Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound-block/local-candidates':
    get:
      operationId: AssetOutboundBlockRulesSourceCandidates_List
      summary: Asset List Outbound Block Rules Source Candidates
      description: Returns a list of source candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound-block/filters/local-candidates':
    get:
      operationId: AssetOutboundBlockRulesSourceCandidatesFilters_List
      summary: Asset List Outbound Block Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound-block/remote-candidates':
    get:
      operationId: AssetOutboundBlockRulesDestinationCandidates_List
      summary: Asset List Outbound Block Rules Destination Candidates
      description: Returns a list of destioantion candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound-block/filters/remote-candidates':
    get:
      operationId: AssetOutboundBlockRulesDestinationCandidatesFilters_List
      summary: Asset List Outbound Block Rules Destination Canidates Filters
      description: Returns a list of filters for destination candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound':
    get:
      operationId: AssetOutboundAllowRules_List
      summary: Asset List Outbound Allow Rules
      description: Returns a list of Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/directionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    post:
      operationId: AssetOutboundAllowRules_Create
      summary: Asset Create Outbound Allow Rule
      description: Returns the properties of the created Outbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound/export':
    post:
      operationId: AssetOutboundAllowRules_Export
      summary: Asset Export Outbound Allow Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound/export/csv/{exportId}':
    get:
      operationId: AssetOutboundAllowRulesExport_Get
      summary: Download assets outbound allow rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound/{ruleId}':
    get:
      operationId: AssetOutboundAllowRule_Get
      summary: Asset Get Outbound Allow Rule
      description: Returns the properties of an Outbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    put:
      operationId: AssetOutboundAllowRule_Update
      summary: Asset Update Outbound Allow Rule
      description: Returns the properties of the updated Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    delete:
      operationId: AssetOutboundAllowRule_Delete
      summary: Asset Remove Outbound Allow Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound/review/approve/{ruleId}':
    put:
      operationId: AssetOutboundAllowRulesReview_Approve
      summary: Asset Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
  '/assets/{assetId}/protection/rules/outbound/review/approve-with-changes/{ruleId}':
    put:
      operationId: AssetOutboundAllowRulesReview_ApproveWithChanges
      summary: Asset Update Outbound Allow Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound/review/reject/{ruleId}':
    delete:
      operationId: AssetOutboundAllowRulesReview_Deny
      summary: Asset ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/assets/{assetId}/protection/rules/outbound/filters':
    get:
      operationId: AssetOutboundAllowRulesFilters_List
      summary: Asset List Outbound Allow Rules Filters
      description: Returns a list of filters for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound/excluded-local-candidates':
    get:
      operationId: AssetOutboundAllowRulesExcludedSourceCandidates_List
      summary: Asset List Outbound Allow Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound/filters/excluded-local-candidates':
    get:
      operationId: AssetOutboundAllowRulesExcludedSourceCandidatesFilters_List
      summary: Asset List Outbound Allow Rules Excluded Source Candidates Filters
      description: Returns a list of filters for excluded source candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound/local-candidates':
    get:
      operationId: AssetOutboundAllowRulesSourceCandidates_List
      summary: Asset List Outbound Allow Rules Source Candidates
      description: Returns a list of source candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound/filters/local-candidates':
    get:
      operationId: AssetOutboundAllowRulesSourceCandidatesFilters_List
      summary: Asset List Outbound Allow Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound/remote-candidates':
    get:
      operationId: AssetOutboundAllowRulesDestinationCandidates_List
      summary: Asset List Outbound Allow Destination Candidates
      description: Returns a list of destination candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/protection/rules/outbound/filters/remote-candidates':
    get:
      operationId: AssetOutboundAllowRulesDestinationCandidatesFilters_List
      summary: Asset List Outbound Allow Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/assets/{assetId}/tags':
    get:
      operationId: AssetTags_Get
      summary: Get asset tags
      description: Returns a list of tags for an entity.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tags'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/monitored:
    get:
      operationId: AssetsMonitored_List
      summary: Monitored Assets
      description: Returns a list of assets that are monitored.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Monitored
  /assets/monitored/filters:
    get:
      operationId: AssetsMonitoredFilters_List
      summary: List Monitored Assets Filters
      description: Returns the filters that can be used for monitored assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Monitored
  /assets/ot:
    get:
      operationId: AssetsOT_List
      summary: List OT/IoT Assets
      description: Returns a list of OT/IoT assets.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetOtList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    post:
      operationId: AssetsOT_Create
      summary: Create an OT/IoT asset
      description: Returns an empty object.
      requestBody:
        description: Array of assetIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/otAssetBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createOtAssetResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  /assets/ot/actions/protect:
    post:
      operationId: AssetsOT_Protect
      summary: Protect OT/IoT Assets
      description: Returns an empty response.
      requestBody:
        description: Array of assetIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetBody'
            examples: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  /assets/ot/actions/queue:
    post:
      operationId: AssetsOt_Queue
      summary: Move OT asset from monitored to learning
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Monitored
  /assets/ot/actions/unprotect:
    post:
      operationId: AssetsOT_Unprotect
      summary: Unprotect OT/IoT Asset
      description: Returns and empty body.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  /assets/ot/filters:
    get:
      operationId: AssetsOTFilters_List
      summary: List OT/IoT Assets Filters
      description: Returns a list of filters for OT/IoT assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}':
    get:
      operationId: AssetOT_Get
      summary: Get an OT asset
      description: Returns the properties of an OT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetOtResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    put:
      operationId: AssetOT_Update
      summary: Edit OT/IoT asset
      description: Edit an OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/otAssetEditBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    delete:
      operationId: AssetOT_Delete
      summary: Remove an OT asset
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/actions/protect':
    post:
      operationId: AssetOT_Protect
      summary: Move specific OT/IoT asset from learning to protection
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/actions/queue':
    post:
      operationId: AssetOtQueue_Learn
      summary: Add OT Asset to learning
      description: Add OT Asset to learning
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Queue days
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueAssetBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/actions/unprotect':
    post:
      operationId: AssetOT_Unprotect
      summary: Unprotect a specific OT/IoT asset
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/activities/logon':
    get:
      operationId: AssetOTLogonActivities_List
      summary: List a specific Logon Activities
      description: Returns a list of logon activites for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logonActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/activities/logon/export':
    post:
      operationId: AssetOTLogonActivities_Export
      summary: Export logon activities for a specific OT/IoT asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/activities/logon/export/csv/{exportId}':
    get:
      operationId: AssetOTLogonActivitiesExport_Get
      summary: Download logon activities for a specific OT/IoT asset export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/activities/logon/filters':
    get:
      operationId: AssetOTLogonActivitiesFilters_List
      summary: Get logon activity filters for a specific OT/IoT asset
      description: Returns the filters that can be used for logon activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/activities/network':
    get:
      operationId: AssetOTNetworkActivities_List
      summary: List Network Activities for a specific OT/IoT asset
      description: Returns a list of network activites for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/activities/network/export':
    post:
      operationId: AssetOTNetworkActivities_Export
      summary: Export network activities for a specific OT/IoT asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/activities/network/export/csv/{exportId}':
    get:
      operationId: AssetOTNetworkActivitiesExport_Get
      summary: Download network activities export for a specific OT/IoT asset
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/activities/network/filters':
    get:
      operationId: AssetOTNetworkActivitiesFilters_List
      summary: Get network activity filters for a specific OT/IoT asset
      description: Returns the filters that can be used for network activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/activities/rpc':
    get:
      operationId: AssetOTRPCActivities_List
      summary: List RPC Activities for a specific OT/IoT asset
      description: Returns a list of RPC activites for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/activities/rpc/export':
    post:
      operationId: AssetOTRPCActivities_Export
      summary: Export RPC activities for a specific OT/IoT asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/activities/rpc/export/csv/{exportId}':
    get:
      operationId: AssetOTRPCActivitiesExport_Get
      summary: Download RPC activities export for a specific OT/IoT asset
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/activities/rpc/filters':
    get:
      operationId: AssetOTRPCActivitiesFilters_List
      summary: Get RPC activity filters for a specific OT/IoT asset
      description: Returns the filters that can be used for RPC activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/activities/rpc/filters/interface-candidates':
    get:
      operationId: AssetOTRPCActivitiesInterfaceCandidatesFilters_List
      summary: Get RPC activity Interface Name filters for a specific OT/IoT asset
      description: Returns the interface name filters that can be used for RPC activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/activities/rpc/filters/op-candidates':
    get:
      operationId: AssetOTRPCActivitiesOperationFilters_List
      summary: Get RPC activity operation filters for a specific OT/IoT asset
      description: Returns the operation filters that can be used for RPC activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/analysis':
    get:
      operationId: AssetOTAnalysis_Get
      summary: Get an OT/IoT asset analysis
      description: Returns an object with OT/IoT asset analysis data.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/sortParameter'
        - $ref: '#/components/parameters/analysisDirectionParameter'
        - $ref: '#/components/parameters/connectionStateParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetAnalysis'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/analysis/export':
    post:
      operationId: AssetOTAnalysis_Export
      summary: Export OT/IoT asset analysis
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAnalysis'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/analysis/export/csv/{exportId}':
    get:
      operationId: AssetOTAnalysisExport_Get
      summary: Download OT/IoT asset analysis report
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/ancestors':
    get:
      operationId: AssetOTMemberOf_Get
      summary: Get an asset ancestors
      description: Returns a list of groups the asset is a member of.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ancestors'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/audit':
    get:
      operationId: AssetOTAudit_Get
      summary: Get a assets audits
      description: Returns a list of audits for the asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/orderParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auditList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/audit/export':
    post:
      operationId: AssetOTAudit_Export
      summary: Export assets audits
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/audit/export/csv/{exportId}':
    get:
      operationId: AssetOTAuditExport_Get
      summary: Download assets audit export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/audit/filters':
    get:
      operationId: AssetOTAuditsFilters_List
      summary: List Audit Filters for a specific OT/IoT asset
      description: Returns a list of filters for Audit events for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/managers':
    get:
      operationId: AssetOTAssetManagers_List
      summary: Get managers of asset
      description: Get asset managers of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/managersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    post:
      operationId: AssetOTAssetManagers_Add
      summary: Add manager of asset
      description: Add an asset manager of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Array of managers to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetManagersBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/managers/candidates':
    get:
      operationId: AssetOTAssetManagersCandidates_List
      summary: Get manager candidates
      description: Get manager candidates for asset managers
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/managers/{groupOrUserId}':
    delete:
      operationId: AssetOTAssetManagers_Delete
      summary: Remove manager of asset
      description: Remove an asset manager of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/groupOrUserIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/inbound':
    get:
      operationId: AssetOTMFAInboundPolicies_List
      summary: Asset List Inbound MFA Policies
      description: Returns a list of inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    post:
      operationId: AssetOTMFAInboundPolicies_Create
      summary: Asset Add Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/inbound/dst-candidates':
    get:
      operationId: AssetOTMFAInboundPoliciesDestinationCandidates_List
      summary: Asset Get destination assets for Inbound MFA Policy
      description: Returns a list of candidates for the destionation of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/inbound/excluded-src-candidates':
    get:
      operationId: AssetOTMFAInboundPoliciesExcludedSourceCandidates_List
      summary: Asset get excluded source asset candidates for Inbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/inbound/filters':
    get:
      operationId: AssetOTMFAInboundPoliciesFilters_List
      summary: Asset List Inbound MFA Policy Filters
      description: Returns a list of filters for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/inbound/filters/dst-candidates':
    get:
      operationId: AssetOTMFAInboundPoliciesDestinationCandidatesFilters_List
      summary: Asset Get Inbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/inbound/filters/src-candidates':
    get:
      operationId: AssetOTMFAInboundPoliciesSourceCandidatesFilters_List
      summary: Asset List Inbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/inbound/filters/src-users-candidates':
    get:
      operationId: AssetOTMFAInboundPoliciesSourceUsersCandidatesFilters_List
      summary: Asset Get Inbound MFA Policies Source Users Filters
      description: Resturns a list of filters for source users on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/inbound/mfa-methods':
    get:
      operationId: AssetOTMFAInboundPoliciesMFAMethods_List
      summary: Asset List Inbound MFA Policy Methods
      description: Returns a list of MFA methods for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/inbound/src-candidates':
    get:
      operationId: AssetOTMFAInboundPoliciesSourceCandidates_List
      summary: Asset List Inbound MFA Polcies Source Candidates
      description: Returns a list of source candidates on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/inbound/src-users-candidates':
    get:
      operationId: AssetOTMFAInboundPoliciesSourceUserCandidates_List
      summary: Asset List Inbound MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/inbound/{reactivePolicyId}':
    get:
      operationId: AssetOTMFAInboundPolicies_Get
      summary: Asset Get Inbound MFA Policy
      description: Returns a inbound MFA policy object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    put:
      operationId: AssetOTMFAInboundPolicies_Update
      summary: Asset Update Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    delete:
      operationId: AssetOTMFAInboundPolicies_Delete
      summary: Asset Remove Inbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/outbound':
    get:
      operationId: AssetOTMFAOutboundPolicies_List
      summary: Asset List Outbound MFA Policies
      description: Returns a list of outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    post:
      operationId: AssetOTMFAOutboundPolicies_Create
      summary: Asset Add Outbound MFA Policy
      description: Returns a the properties of outbound MFA policy created.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/outbound/dst-candidates':
    get:
      operationId: AssetOTMFAOutboundPoliciesDestinationCandidates_List
      summary: Asset List Outbound MFA Policies Destination Candidates
      description: Returns a list of destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/outbound/excluded-src-candidates':
    get:
      operationId: AssetOTMFAOutboundPoliciesExcludedSourceCandidates_List
      summary: Asset get excluded source asset candidates for Outbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/outbound/filters':
    get:
      operationId: AssetOTMFAOutboundPoliciesFilters_Get
      summary: Asset List Outbound MFA Policies Filters
      description: Returns a list of filters for outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/outbound/filters/dst-candidates':
    get:
      operationId: AssetOTMFAOutboundPoliciesDestinationCandidatesFilters_List
      summary: Asset List Outbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/outbound/filters/src-candidates':
    get:
      operationId: AssetOTMFAOutboundPoliciesSourceCandidatesFilters_List
      summary: Asset Get Outbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/outbound/filters/src-users-candidates':
    get:
      operationId: AssetOTMFAOutboundPoliciesSourceUsersCandidatesFilters_List
      summary: Asset List Outbound MFA Policies Source Users Candidates Filters
      description: Returns a list of filsters for source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/outbound/mfa-methods':
    get:
      operationId: AssetOTMFAOutboundPoliciesMFAMethods_List
      summary: Asset List Outbound MFA Policies Methods
      description: Returns a list of MFA methods on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/outbound/src-candidates':
    get:
      operationId: AssetOTMFAOutboundPoliciesSourceCandidates_List
      summary: Asset List Outbound MFA Policies Source Candidates
      description: Returns a list of source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/outbound/src-users-candidates':
    get:
      operationId: AssetOTMFAOutboundPoliciesSourceUserCandidates_List
      summary: Asset Get Outbound MFA Policies Source Users Candidates
      description: Returns a list of source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/reactive-policies/outbound/{reactivePolicyId}':
    get:
      operationId: AssetOTMFAOutboundPolicies_Get
      summary: Asset Get Outbound MFA Policy
      description: Returns the properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    put:
      operationId: AssetOTMFAOutboundPolicies_Update
      summary: Asset Update Outbound MFA Policy
      description: Returns the updated properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Reactive Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    delete:
      operationId: AssetOTMFAOutboundPolicies_Delete
      summary: Asset Remove Outbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/distribution/{ruleId}':
    get:
      operationId: AssetOTRulesDistribution_Get
      summary: Get distribution of rule hit count for a specific OT/IoT asset
      description: Returns an object with rules distribution.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/ruleDirectionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleDistribution'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/history/{ruleId}':
    get:
      operationId: AssetOTRulesHistory_Get
      summary: Get a historic version of an rule for a specific OT/IoT asset
      description: Returns the properties of the previous version of the rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/updateIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historyRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-allow':
    get:
      operationId: AssetOTInboundAllowRules_List
      summary: Asset List Inbound Allow Rules
      description: Returns a list of Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/directionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    post:
      operationId: AssetOTInboundAllowRules_Create
      summary: Asset Create Inbound Allow Rule
      description: Returns the properties of the created Inbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-allow/export':
    post:
      operationId: AssetOTInboundAllowRules_Export
      summary: Asset Export Inbound Allow Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-allow/export/csv/{exportId}':
    get:
      operationId: AssetOTInboundAllowRulesExport_Get
      summary: Download assets inbound allow rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-allow/excluded-local-candidates':
    get:
      operationId: AssetOTInboundAllowRulesExcludedDestinationCandidates_List
      summary: Asset Get Inbound Allow Rules Excluded Destination Candidates
      description: Returns a list of excluded destionation candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-allow/filters':
    get:
      operationId: AssetOTInboundAllowRulesFilters_List
      summary: Asset List Inbound Allow Rules Filters
      description: Returns a list of filters for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-allow/filters/local-candidates':
    get:
      operationId: AssetOTInboundAllowRulesDesinationCandidatesFilters_List
      summary: Asset List Inbound Allow Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-allow/filters/remote-candidates':
    get:
      operationId: AssetOTInboundAllowRulesSourceCandidatesFilters_List
      summary: Asset Get Inbound Allow Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-allow/local-candidates':
    get:
      operationId: AssetOTInboundAllowRulesDestinationCandidates_List
      summary: Asset List Inbound Allow Rules Destination Candidates
      description: Returns a list of destionation candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-allow/remote-candidates':
    get:
      operationId: AssetOTInboundAllowRulesSourceCandidates_List
      summary: Asset List Inbound Allow Rules Source Candidates
      description: Returns a list of source candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-allow/review/approve/{ruleId}':
    put:
      operationId: AssetOTInboundAllowRulesReview_Approve
      summary: Asset Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
  '/assets/ot/{assetId}/protection/rules/inbound-allow/review/approve-with-changes/{ruleId}':
    put:
      operationId: AssetOTInboundAllowRulesReview_ApproveWithChanges
      summary: Asset Update Inbound Allow Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-allow/review/reject/{ruleId}':
    delete:
      operationId: AssetOTInboundAllowRulesReview_Deny
      summary: Asset ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/assets/ot/{assetId}/protection/rules/inbound-allow/{ruleId}':
    get:
      operationId: AssetOTInboundAllowRule_Get
      summary: Asset Get Inbound Allow Rule
      description: Returns the properties of an Inbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    put:
      operationId: AssetOTInboundAllowRule_Update
      summary: Asset Update Inbound Allow Rule
      description: Returns the properties of the update Inbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    delete:
      operationId: AssetOTInboundAllowRule_Delete
      summary: Asset Remove Inbound Allow Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-block':
    get:
      operationId: AssetOTInboundBlockRules_List
      summary: Asset List Inbound Block Rules
      description: Returns a list of Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/directionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    post:
      operationId: AssetOTInboundBlockRules_Create
      summary: Asset Create Inbound Block Rule
      description: Returns the properties of the created Inbound Block rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-block/export':
    post:
      operationId: AssetOTInboundBlockRules_Export
      summary: Asset Export Inbound Block Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-block/export/csv/{exportId}':
    get:
      operationId: AssetOTInboundBlockRulesExport_Get
      summary: Download assets inbound block rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-block/excluded-local-candidates':
    get:
      operationId: AssetOTInboundBlockRulesExcludedDestinationCandidates_List
      summary: Asset List Inbound Block Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-block/filters':
    get:
      operationId: AssetOTInboundBlockRulesFilters_Get
      summary: Asset List Inbound Block Rules Filters
      description: Returns a list of filters for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-block/filters/local-candidates':
    get:
      operationId: AssetOTInboundBlockRulesDestinationCandidatesFilters_List
      summary: Asset List Inbound Block Rules Desination Candidates Filters
      description: Returns a list of filters destination candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-block/filters/remote-candidates':
    get:
      operationId: AssetOTInboundBlockRulesSourceCandidatesFilters_List
      summary: Asset List Inbound Block Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-block/local-candidates':
    get:
      operationId: AssetOTInboundBlockRulesDestinationCandidates_List
      summary: Asset List Inbound Block Rules Desintation Candidates
      description: Returns a list of destination candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-block/remote-candidates':
    get:
      operationId: AssetOTInboundBlockRulesSourceCandidates_List
      summary: Asset List Inbound Block Rules Source Candidates
      description: Returns a list of source candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-block/review/approve/{ruleId}':
    put:
      operationId: AssetOTInboundBlockRulesReview_Approve
      summary: Asset Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
  '/assets/ot/{assetId}/protection/rules/inbound-block/review/approve-with-changes/{ruleId}':
    put:
      operationId: AssetOTInboundBlockRulesReview_ApproveWithChanges
      summary: Asset Update Inbound Block Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/inbound-block/review/reject/{ruleId}':
    delete:
      operationId: AssetOTInboundBlockRulesReview_Deny
      summary: Asset ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/assets/ot/{assetId}/protection/rules/inbound-block/{ruleId}':
    get:
      operationId: AssetOTInboundBlockRule_Get
      summary: Asset Get Inbound Block Rule
      description: Returns the properties of the Inbound Block rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    put:
      operationId: AssetOTInboundBlockRule_Update
      summary: Asset Update Inbound Block Rule
      description: Returns the properties of the updated Inbound Block rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    delete:
      operationId: AssetOTInboundBlockRule_Delete
      summary: Asset Remove Inbound Block Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound-block':
    get:
      operationId: AssetOTOutboundBlockRules_List
      summary: Asset List Outbound Block Rules
      description: Returns a list of outbound block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/directionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    post:
      operationId: AssetOTOutboundBlockRules_Create
      summary: Asset Create Outbound Block Rule
      description: Returns the properties of the created outbound block rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound-block/export':
    post:
      operationId: AssetOTOutboundBlockRules_Export
      summary: Asset Export Outbound Block Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound-block/export/csv/{exportId}':
    get:
      operationId: AssetOTOutboundBlockRulesExport_Get
      summary: Download assets outbound block rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound-block/excluded-local-candidates':
    get:
      operationId: AssetOTOutboundBlockRulesExcludedSourceCandidates_List
      summary: Asset List Outbound Block Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound-block/filters':
    get:
      operationId: AssetOTOutboundBlockRulesFilters_List
      summary: Asset List Outbound Block Rules Filters
      description: Returns a list of filters for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound-block/filters/local-candidates':
    get:
      operationId: AssetOTOutboundBlockRulesSourceCandidatesFilters_List
      summary: Asset List Outbound Block Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound-block/filters/remote-candidates':
    get:
      operationId: AssetOTOutboundBlockRulesDestinationCandidatesFilters_List
      summary: Asset List Outbound Block Rules Destination Canidates Filters
      description: Returns a list of filters for destination candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound-block/local-candidates':
    get:
      operationId: AssetOTOutboundBlockRulesSourceCandidates_List
      summary: Asset List Outbound Block Rules Source Candidates
      description: Returns a list of source candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound-block/remote-candidates':
    get:
      operationId: AssetOTOutboundBlockRulesDestinationCandidates_List
      summary: Asset List Outbound Block Rules Destination Candidates
      description: Returns a list of destioantion candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound-block/review/approve/{ruleId}':
    put:
      operationId: AssetOTOutboundBlockRulesReview_Approve
      summary: Asset Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
  '/assets/ot/{assetId}/protection/rules/outbound-block/review/approve-with-changes/{ruleId}':
    put:
      operationId: AssetOTOutboundBlockRulesReview_ApproveWithChanges
      summary: Asset Update Outbound Block Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound-block/review/reject/{ruleId}':
    delete:
      operationId: AssetOTOutboundBlockRulesReview_Deny
      summary: Asset ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/assets/ot/{assetId}/protection/rules/outbound-block/{ruleId}':
    get:
      operationId: AssetOTOutboundBlockRule_Get
      summary: Asset Get Outbound Block Rule
      description: Returns the properties of an outbound block rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    put:
      operationId: AssetOTOutboundBlockRule_Update
      summary: Asset Update Outbound Block Rule
      description: Returns the properties of the updated outbound block rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    delete:
      operationId: AssetOTOutboundBlockRule_Delete
      summary: Asset Remove Outbound Block Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound':
    get:
      operationId: AssetOTOutboundAllowRules_List
      summary: Asset List Outbound Allow Rules
      description: Returns a list of Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/directionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    post:
      operationId: AssetOTOutboundAllowRules_Create
      summary: Asset Create Outbound Allow Rule
      description: Returns the properties of the created Outbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound/export':
    post:
      operationId: AssetOTOutboundAllowRules_Export
      summary: Asset Export Outbound Allow Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound/export/csv/{exportId}':
    get:
      operationId: AssetOTOutboundAllowRulesExport_Get
      summary: Download assets outbound allow rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound/excluded-local-candidates':
    get:
      operationId: AssetOTOutboundAllowRulesExcludedSourceCandidates_List
      summary: Asset List Outbound Allow Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound/filters':
    get:
      operationId: AssetOTOutboundAllowRulesFilters_List
      summary: Asset List Outbound Allow Rules Filters
      description: Returns a list of filters for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound/filters/excluded-local-candidates':
    get:
      operationId: AssetOTOutboundAllowRulesExcludedSourceCandidatesFilters_List
      summary: Asset List Outbound Allow Rules Excluded Source Candidates Filters
      description: Returns a list of filters for excluded source candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound/filters/local-candidates':
    get:
      operationId: AssetOTOutboundAllowRulesSourceCandidatesFilters_List
      summary: Asset List Outbound Allow Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound/filters/remote-candidates':
    get:
      operationId: AssetOTOutboundAllowRulesDestinationCandidatesFilters_List
      summary: Asset List Outbound Allow Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound/local-candidates':
    get:
      operationId: AssetOTOutboundAllowRulesSourceCandidates_List
      summary: Asset List Outbound Allow Rules Source Candidates
      description: Returns a list of source candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound/remote-candidates':
    get:
      operationId: AssetOTOutboundAllowRulesDestinationCandidates_List
      summary: Asset List Outbound Allow Destination Candidates
      description: Returns a list of destination candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound/review/approve/{ruleId}':
    put:
      operationId: AssetOTOutboundAllowRulesReview_Approve
      summary: Asset Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
  '/assets/ot/{assetId}/protection/rules/outbound/review/approve-with-changes/{ruleId}':
    put:
      operationId: AssetOTOutboundAllowRulesReview_ApproveWithChanges
      summary: Asset Update Outbound Allow Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/protection/rules/outbound/review/reject/{ruleId}':
    delete:
      operationId: AssetOTOutboundAllowRulesReview_Deny
      summary: Asset ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/assets/ot/{assetId}/protection/rules/outbound/{ruleId}':
    get:
      operationId: AssetOTOutboundAllowRule_Get
      summary: Asset Get Outbound Allow Rule
      description: Returns the properties of an Outbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    put:
      operationId: AssetOTOutboundAllowRule_Update
      summary: Asset Update Outbound Allow Rule
      description: Returns the properties of the updated Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    delete:
      operationId: AssetOTOutboundAllowRule_Delete
      summary: Asset Remove Outbound Allow Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  '/assets/ot/{assetId}/tags':
    get:
      operationId: AssetOTTags_Get
      summary: Get OT asset tags
      description: Returns a list of tags for an entity.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tags'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  /assets/protected:
    get:
      operationId: AssetsProtected_List
      summary: List Protected Assets
      description: Returns a list of Protected assets.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Protected
  /assets/protected/filters:
    get:
      operationId: AssetsProtectedFilters_List
      summary: List Assets Protected Filters
      description: Returns a list of filters for Protected assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
  /assets/protected/searchId:
    get:
      operationId: Assets_Protected_Search
      tags:
        - Assets
      summary: Search protected asset by FQDN
      description: Given fqdn, returns assetId, if asset is found and is protected
      parameters:
        - $ref: '#/components/parameters/fqdnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
  /assets/queued:
    get:
      operationId: AssetsQueued_List
      summary: List Assets in learning
      description: Returns a list of assets in Learning.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Learning
  /assets/queued/filters:
    get:
      operationId: AssetsQueuedFilters_List
      summary: List Assets in Learning Filters
      description: Returns a list of filters for assets in Learning.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Learning
  /assets/searchId:
    get:
      operationId: Assets_Search
      summary: Search Asset by FQDN
      description: Returns an assetId.
      parameters:
        - $ref: '#/components/parameters/fqdnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/states/statistics:
    get:
      operationId: AssetsStatesStatistics_Get
      summary: Get asset state statistics
      description: Returns an object with asset state statistics.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsStatesStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/statistics:
    get:
      operationId: AssetsStatistics_Get
      summary: Get asset statistics
      description: Returns an object with asset statistics.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsStatistics'
              examples:
                example-1:
                  value: {}
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /audit:
    get:
      operationId: Audits_List
      summary: List Audit Logs
      description: Returns a list of audit events.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auditList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Audit
  /audit/export:
    post:
      operationId: Audits_Export
      summary: Export audit log
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Audit
  '/audit/export/csv/{exportId}':
    get:
      operationId: AuditExport_Get
      summary: Download audit export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Audit
  /audit/filters:
    get:
      operationId: AuditsFilters_List
      summary: List Audit Filters
      description: Returns a list of filters for Audit events.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Audit
  /auth/challenge:
    post:
      operationId: AuthChallenge_POST
      summary: Challenge API to get token
      description: Request OTP for login API.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/challengeBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/challengeResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Auth
  /auth/login:
    post:
      operationId: AuthLogin_POST
      summary: Login to get token
      description: Login API after getting challenge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Auth
  /auth/logout:
    post:
      operationId: AuthLogout_POST
      summary: Logout
      description: Logout API
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Auth
  /entities/encode-ip:
    get:
      operationId: Entity_EncodeIP
      summary: Encode IP to Asset
      description: Returns the assetId after encoding the IP address.
      parameters:
        - $ref: '#/components/parameters/ipParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/encodedEntity'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Entity
  /entities/encode-ip-range:
    get:
      operationId: Entity_EncodeIPRange
      summary: Encode IP range
      description: Returns the assetId after encoding the IP range.
      parameters:
        - $ref: '#/components/parameters/ipRangeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/encodedEntity'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Entity
  /entities/encode-subnet:
    get:
      operationId: Entity_EncodeSubnet
      summary: Encode IP Subnet
      description: Returns the assetId after encoding the IP subnet.
      parameters:
        - $ref: '#/components/parameters/ipSubnetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/encodedEntity'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Entity
  /environments/cluster-strategy:
    get:
      operationId: SettingsClusterStrategy_Get
      summary: Get cluster strategy configurattion
      description: Returns cluster strategy configuration.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsClusterStrategy'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings
    put:
      operationId: SettingsClusterStrategy_Set
      summary: Set cluster strategy configurattion
      description: Returns an empty response.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsClusterStrategyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings
  /environments/deployments:
    get:
      operationId: TrustServers_List
      summary: List trust server deployments
      description: Returns a list of trust servers.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploymentsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
  /groups:
    get:
      operationId: Groups_List
      summary: List Groups
      description: Returns a list of groups.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/ad/export:
    post:
      operationId: ADGroups_Export
      summary: Export AD Groups
      description: export list of AD groups.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Active Directory
  '/groups/ad/export/csv/{exportId}':
    get:
      operationId: ADGroupsExport_Get
      summary: Download Ad groups Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Groups Active Directory
  /groups/custom:
    post:
      operationId: CustomGroups_Create
      summary: Create Custom Group
      description: Returns an empty object.
      requestBody:
        description: Protection Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customGroupBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customGroupResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
  '/groups/custom/{groupId}':
    put:
      operationId: CustomGroups_Update
      summary: Update Custom Group
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Custom Group properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customGroupBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
    delete:
      operationId: CustomGroups_Delete
      summary: Delete Custom Group
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
  /groups/custom/member-candidates:
    get:
      operationId: CustomGroupsCandidates_List
      summary: List Custom Groups member candidates
      description: Returns a list of candidates for custom group membership.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/groupIdQueryParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
  '/groups/custom/{groupId}/members':
    put:
      operationId: CustomGroupsMembers_Add
      summary: Add Custom Group members
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Custom Group Members properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customGroupMembersBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
    delete:
      operationId: CustomGroupsMembers_Delete
      summary: Delete Custom Group members
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Custom Group Members properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customGroupMembersBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
  /groups/statistics:
    get:
      operationId: GroupsStatistics_Get
      summary: Get Group statistics
      description: Returns an object with group statistics.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/tag/{groupId}/members':
    delete:
      operationId: TagGroupsMembers_delete
      summary: Remove tag group members
      description: Remove tag group members by members id.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Tag Group Members properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customGroupMembersBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Tags
  /groups/{groupType}:
    get:
      operationId: GroupsByType_List
      summary: List Groups
      description: Returns a list of groups.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/filters:
    get:
      operationId: GroupsFilters_Get
      summary: List filters for groups
      description: Returns a list of filters for Groups.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Active Directory
  '/groups/{groupType}/{groupId}':
    get:
      operationId: Group_Get
      summary: Get a group
      description: Returns the properties of an group.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/ancestors':
    get:
      operationId: GroupMemberOf_Get
      summary: Get a groups ancestors
      description: Returns a list of groups the group is a member of.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ancestors'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/audit':
    get:
      operationId: GroupAudit_Get
      summary: Get a groups audits
      description: Returns a list of audits for the group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/orderParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auditList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/audit/export':
    post:
      operationId: groupsAudit_Export
      summary: Export groups audits
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/audit/export/csv/{exportId}':
    get:
      operationId: GroupsAuditExport_Get
      summary: Download groups audit export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/audit/filters':
    get:
      operationId: GroupsAuditsFilters_List
      summary: List Audit Filters for a specific Group
      description: Returns a list of filters for Audit events for a specific group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/managers':
    get:
      operationId: Groups-AssetManagers_List
      summary: Get managers of group
      description: Get asset managers of group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/managersList'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    post:
      operationId: Groups-AssetManagers_Add
      summary: Add asset manager of group
      description: Add an asset manager of a group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      requestBody:
        description: Array of managers to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetManagersBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/managers/candidates':
    get:
      operationId: Groups-AssetManagersCandidates_List
      summary: Get manager candidates
      description: Get manager candidates for group managers
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/managers/{groupOrUserId}':
    delete:
      operationId: Groups-AssetManagers_Delete
      summary: Remove asset manager
      description: Remove asset manager of group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupOrUserIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/managed-assets':
    get:
      operationId: Groups-ManagedAssets_List
      summary: Get managed assets
      description: Get managed assets for group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/managedAssetsList'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    post:
      operationId: Groups-ManagedAssets_Add
      summary: Add a managed assets
      description: Add a managed assets for group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      requestBody:
        description: Array of assets to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/managedAssetsBody'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  '/groups/{groupType}/{groupId}/managed-assets/candidates':
    get:
      operationId: Groups-ManagedAssetsCandidates_List
      summary: Get asset manager candidates
      description: Get asset candidates to be managed by group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/managed-assets/{groupOrAssetId}':
    delete:
      operationId: Groups-ManagedAssets_Delete
      summary: Remove asset manager
      description: Remove managed asset of group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupOrAssetIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/inbound':
    get:
      operationId: GroupsMFAInboundPolicies_List
      summary: Groups List Inbound MFA Policies
      description: Returns a list of inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    post:
      operationId: GroupsMFAInboundPolicies_Create
      summary: Groups Add Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/inbound/dst-candidates':
    get:
      operationId: GroupsMFAInboundPoliciesDestinationCandidates_List
      summary: Groups Get destination assets for Inbound MFA Policy
      description: Returns a list of candidates for the destionation of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/inbound/excluded-src-candidates':
    get:
      operationId: GroupsMFAInboundPoliciesExcludedSourceCandidates_List
      summary: Groups get excluded source asset candidates for Inbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/inbound/filters':
    get:
      operationId: GroupsMFAInboundPoliciesFilters_List
      summary: Groups List Inbound MFA Policy Filters
      description: Returns a list of filters for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/inbound/filters/dst-candidates':
    get:
      operationId: GroupsMFAInboundPoliciesDestinationCandidatesFilters_List
      summary: Groups Get Inbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/inbound/filters/src-candidates':
    get:
      operationId: GroupsMFAInboundPoliciesSourceCandidatesFilters_List
      summary: Groups List Inbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/inbound/filters/src-users-candidates':
    get:
      operationId: GroupsMFAInboundPoliciesSourceUsersCandidatesFilters_List
      summary: Groups Get Inbound MFA Policies Source Users Filters
      description: Resturns a list of filters for source users on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/inbound/mfa-methods':
    get:
      operationId: GroupsMFAInboundPoliciesMFAMethods_List
      summary: Groups List Inbound MFA Policy Methods
      description: Returns a list of MFA methods for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/inbound/src-candidates':
    get:
      operationId: GroupsMFAInboundPoliciesSourceCandidates_List
      summary: Groups List Inbound MFA Polcies Source Candidates
      description: Returns a list of source candidates on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/inbound/src-users-candidates':
    get:
      operationId: GroupsMFAInboundPoliciesSourceUserCandidates_List
      summary: Groups List Inbound MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/inbound/{reactivePolicyId}':
    get:
      operationId: GroupsMFAInboundPolicies_Get
      summary: Groups Get Inbound MFA Policy
      description: Returns a inbound MFA policy object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    put:
      operationId: GroupsMFAInboundPolicies_Update
      summary: Groups Update Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    delete:
      operationId: GroupsMFAInboundPolicies_Delete
      summary: Groups Remove Inbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/outbound':
    get:
      operationId: GroupsMFAOutboundPolicies_List
      summary: Groups List Outbound MFA Policies
      description: Returns a list of outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    post:
      operationId: GroupsMFAOutboundPolicies_Create
      summary: Groups Add Outbound MFA Policy
      description: Returns a the properties of outbound MFA policy created.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/outbound/dst-candidates':
    get:
      operationId: GroupsMFAOutboundPoliciesDestinationCandidates_List
      summary: Groups List Outbound MFA Policies Destination Candidates
      description: Returns a list of destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/outbound/excluded-src-candidates':
    get:
      operationId: GroupsMFAOutboundPoliciesExcludedSourceCandidates_List
      summary: Groups get excluded source asset candidates for Outbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/outbound/filters':
    get:
      operationId: GroupsMFAOutboundPoliciesFilters_Get
      summary: Groups List Outbound MFA Policies Filters
      description: Returns a list of filters for outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/outbound/filters/dst-candidates':
    get:
      operationId: GroupsMFAOutboundPoliciesDestinationCandidatesFilters_List
      summary: Groups List Outbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/outbound/filters/src-candidates':
    get:
      operationId: GroupsMFAOutboundPoliciesSourceCandidatesFilters_List
      summary: Groups Get Outbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/outbound/filters/src-users-candidates':
    get:
      operationId: GroupsMFAOutboundPoliciesSourceUsersCandidatesFilters_List
      summary: Groups List Outbound MFA Policies Source Users Candidates Filters
      description: Returns a list of filsters for source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/outbound/mfa-methods':
    get:
      operationId: GroupsMFAOutboundPoliciesMFAMethods_List
      summary: Groups List Outbound MFA Policies Methods
      description: Returns a list of MFA methods on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/outbound/src-candidates':
    get:
      operationId: GroupsMFAOutboundPoliciesSourceCandidates_List
      summary: Groups List Outbound MFA Policies Source Candidates
      description: Returns a list of source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/outbound/src-users-candidates':
    get:
      operationId: GroupsMFAOutboundPoliciesSourceUserCandidates_List
      summary: Groups Get Outbound MFA Policies Source Users Candidates
      description: Returns a list of source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/reactive-policies/outbound/{reactivePolicyId}':
    get:
      operationId: GroupsMFAOutboundPolicies_Get
      summary: Groups Get Outbound MFA Policy
      description: Returns the properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    put:
      operationId: GroupsMFAOutboundPolicies_Update
      summary: Groups Update Outbound MFA Policy
      description: Returns the updated properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Reactive Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    delete:
      operationId: GroupsMFAOutboundPolicies_Delete
      summary: Groups Remove Outbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/distribution/{ruleId}':
    get:
      operationId: GroupsRulesDistribution_Get
      summary: Get distribution of rule hit count
      description: Returns an object with rules distribution.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/ruleDirectionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleDistribution'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/history/{ruleId}':
    get:
      operationId: GroupsRulesHistory_Get
      summary: Get a historic version of an rule
      description: Returns the properties of the previous version of the rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/updateIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historyRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-allow':
    get:
      operationId: GroupsInboundAllowRules_List
      summary: Groups List Inbound Allow Rules
      description: Returns a list of Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/directionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    post:
      operationId: GroupsInboundAllowRules_Create
      summary: Groups Create Inbound Allow Rule
      description: Returns the properties of the created Inbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-allow/export':
    post:
      operationId: GroupsInboundAllowRules_Export
      summary: Groups Export Inbound Allow Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-allow/export/csv/{exportId}':
    get:
      operationId: GroupsInboundAllowRulesExport_Get
      summary: Download groups Inbound allow rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-allow/excluded-local-candidates':
    get:
      operationId: GroupsInboundAllowRulesExcludedDestinationCandidates_List
      summary: Groups Get Inbound Allow Rules Excluded Destination Candidates
      description: Returns a list of excluded destionation candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-allow/filters':
    get:
      operationId: GroupsInboundAllowRulesFilters_List
      summary: Groups List Inbound Allow Rules Filters
      description: Returns a list of filters for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-allow/filters/remote-candidates':
    get:
      operationId: GroupsInboundAllowRulesSourceCandidatesFilters_List
      summary: Groups Get Inbound Allow Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-allow/filters/local-candidates':
    get:
      operationId: GroupsInboundAllowRulesDesinationCandidatesFilters_List
      summary: Groups List Inbound Allow Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-allow/local-candidates':
    get:
      operationId: GroupsInboundAllowRulesDestinationCandidates_List
      summary: Groups List Inbound Allow Rules Destination Candidates
      description: Returns a list of destionation candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-allow/remote-candidates':
    get:
      operationId: GroupsInboundAllowRulesSourceCandidates_List
      summary: Groups List Inbound Allow Rules Source Candidates
      description: Returns a list of source candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-allow/review/approve/{ruleId}':
    put:
      operationId: GroupsInboundAllowRulesReview_Approve
      summary: Groups Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
  '/groups/{groupType}/{groupId}/protection/rules/inbound-allow/review/approve-with-changes/{ruleId}':
    put:
      operationId: GroupsInboundAllowRulesReview_ApproveWithChanges
      summary: Groups Update Inbound Allow Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-allow/review/reject/{ruleId}':
    delete:
      operationId: GroupsInboundAllowRulesReview_Deny
      summary: Groups ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/groups/{groupType}/{groupId}/protection/rules/inbound-allow/{ruleId}':
    get:
      operationId: GroupsInboundAllowRule_Get
      summary: Groups Get Inbound Allow Rule
      description: Returns the properties of an Inbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    put:
      operationId: GroupsInboundAllowRule_Update
      summary: Groups Update Inbound Allow Rule
      description: Returns the properties of the update Inbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    delete:
      operationId: GroupsInboundAllowRule_Delete
      summary: Groups Remove Inbound Allow Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-block':
    get:
      operationId: GroupsInboundBlockRules_List
      summary: Groups List Inbound Block Rules
      description: Returns a list of Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/directionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    post:
      operationId: GroupsInboundBlockRules_Create
      summary: Groups Create Inbound Block Rule
      description: Returns the properties of the created Inbound Block rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-block/export':
    post:
      operationId: GroupsInboundBlockRules_Export
      summary: Groups Export Inbound Block Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-block/export/csv/{exportId}':
    get:
      operationId: GroupsInboundBlockRulesExport_Get
      summary: Download groups Inbound block rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-block/excluded-local-candidates':
    get:
      operationId: GroupsInboundBlockRulesExcludedDestinationCandidates_List
      summary: Groups List Inbound Block Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-block/filters':
    get:
      operationId: GroupsInboundBlockRulesFilters_Get
      summary: Groups List Inbound Block Rules Filters
      description: Returns a list of filters for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-block/filters/local-candidates':
    get:
      operationId: GroupsInboundBlockRulesDestinationCandidatesFilters_List
      summary: Groups List Inbound Block Rules Desination Candidates Filters
      description: Returns a list of filters destination candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-block/filters/remote-candidates':
    get:
      operationId: GroupsInboundBlockRulesSourceCandidatesFilters_List
      summary: Groups List Inbound Block Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-block/local-candidates':
    get:
      operationId: GroupsInboundBlockRulesDestinationCandidates_List
      summary: Groups List Inbound Block Rules Desintation Candidates
      description: Returns a list of destination candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-block/remote-candidates':
    get:
      operationId: GroupsInboundBlockRulesSourceCandidates_List
      summary: Groups List Inbound Block Rules Source Candidates
      description: Returns a list of source candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-block/review/approve/{ruleId}':
    put:
      operationId: GroupsInboundBlockRulesReview_Approve
      summary: Groups Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
  '/groups/{groupType}/{groupId}/protection/rules/inbound-block/review/approve-with-changes/{ruleId}':
    put:
      operationId: GroupsInboundBlockRulesReview_ApproveWithChanges
      summary: Groups Update Inbound Block Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/inbound-block/review/reject/{ruleId}':
    delete:
      operationId: GroupsInboundBlockRulesReview_Deny
      summary: Groups ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/groups/{groupType}/{groupId}/protection/rules/inbound-block/{ruleId}':
    get:
      operationId: GroupsInboundBlockRule_Get
      summary: Groups Get Inbound Block Rule
      description: Returns the properties of the Inbound Block rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    put:
      operationId: GroupsInboundBlockRule_Update
      summary: Groups Update Inbound Block Rule
      description: Returns the properties of the updated Inbound Block rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    delete:
      operationId: GroupsInboundBlockRule_Delete
      summary: Groups Remove Inbound Block Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound-block':
    get:
      operationId: GroupsOutboundBlockRules_List
      summary: Groups List Outbound Block Rules
      description: Returns a list of outbound block rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/directionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    post:
      operationId: GroupsOutboundBlockRules_Create
      summary: Groups Create Outbound Block Rule
      description: Returns the properties of the created outbound block rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound-block/export':
    post:
      operationId: GroupsOutboundBlockRules_Export
      summary: Groups Export Outbound Block Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound-block/export/csv/{exportId}':
    get:
      operationId: GroupsOutboundBlockRulesExport_Get
      summary: Download groups Outbound block rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound-block/excluded-local-candidates':
    get:
      operationId: GroupsOutboundBlockRulesExcludedSourceCandidates_List
      summary: Groups List Outbound Block Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound-block/filters':
    get:
      operationId: GroupsOutboundBlockRulesFilters_List
      summary: Groups List Outbound Block Rules Filters
      description: Returns a list of filters for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound-block/filters/local-candidates':
    get:
      operationId: GroupsOutboundBlockRulesSourceCandidatesFilters_List
      summary: Groups List Outbound Block Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound-block/filters/remote-candidates':
    get:
      operationId: GroupsOutboundBlockRulesDestinationCandidatesFilters_List
      summary: Groups List Outbound Block Rules Destination Canidates Filters
      description: Returns a list of filters for destination candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound-block/local-candidates':
    get:
      operationId: GroupsOutboundBlockRulesSourceCandidates_List
      summary: Groups List Outbound Block Rules Source Candidates
      description: Returns a list of source candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound-block/remote-candidates':
    get:
      operationId: GroupsOutboundBlockRulesDestinationCandidates_List
      summary: Groups List Outbound Block Rules Destination Candidates
      description: Returns a list of destioantion candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound-block/review/approve/{ruleId}':
    put:
      operationId: GroupsOutboundBlockRulesReview_Approve
      summary: Groups Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
  '/groups/{groupType}/{groupId}/protection/rules/outbound-block/review/approve-with-changes/{ruleId}':
    put:
      operationId: GroupsOutboundBlockRulesReview_ApproveWithChanges
      summary: Groups Update Outbound Block Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound-block/review/reject/{ruleId}':
    delete:
      operationId: GroupsOutboundBlockRulesReview_Deny
      summary: Groups ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/groups/{groupType}/{groupId}/protection/rules/outbound-block/{ruleId}':
    get:
      operationId: GroupsOutboundBlockRule_Get
      summary: Groups Get Outbound Block Rule
      description: Returns the properties of an outbound block rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    put:
      operationId: GroupsOutboundBlockRule_Update
      summary: Groups Update Outbound Block Rule
      description: Returns the properties of the updated outbound block rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    delete:
      operationId: GroupsOutboundBlockRule_Delete
      summary: Groups Remove Outbound Block Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound':
    get:
      operationId: GroupsOutboundAllowRules_List
      summary: Groups List Outbound Allow Rules
      description: Returns a list of Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/directionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    post:
      operationId: GroupsOutboundAllowRules_Create
      summary: Groups Create Outbound Allow Rule
      description: Returns the properties of the created Outbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound/export':
    post:
      operationId: GroupsOutboundAllowRules_Export
      summary: Groups Export Outbound Allow Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound/export/csv/{exportId}':
    get:
      operationId: GroupsOutboundAllowRulesExport_Get
      summary: Download groups Outbound Allow rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound/excluded-local-candidates':
    get:
      operationId: GroupsOutboundAllowRulesExcludedSourceCandidates_List
      summary: Groups List Outbound Allow Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound/filters':
    get:
      operationId: GroupsOutboundAllowRulesFilters_List
      summary: Groups List Outbound Allow Rules Filters
      description: Returns a list of filters for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound/filters/excluded-local-candidates':
    get:
      operationId: GroupsOutboundAllowRulesExcludedSourceCandidatesFilters_List
      summary: Groups List Outbound Allow Rules Excluded Source Candidates Filters
      description: Returns a list of filters for excluded source candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound/filters/local-candidates':
    get:
      operationId: GroupsOutboundAllowRulesSourceCandidatesFilters_List
      summary: Groups List Outbound Allow Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound/filters/remote-candidates':
    get:
      operationId: GroupsOutboundAllowRulesDestinationCandidatesFilters_List
      summary: Groups List Outbound Allow Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound/local-candidates':
    get:
      operationId: GroupsOutboundAllowRulesSourceCandidates_List
      summary: Groups List Outbound Allow Rules Source Candidates
      description: Returns a list of source candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound/remote-candidates':
    get:
      operationId: GroupsOutboundAllowRulesDestinationCandidates_List
      summary: Groups List Outbound Allow Destination Candidates
      description: Returns a list of destination candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound/review/approve/{ruleId}':
    put:
      operationId: GroupsOutboundAllowRulesReview_Approve
      summary: Groups Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
  '/groups/{groupType}/{groupId}/protection/rules/outbound/review/approve-with-changes/{ruleId}':
    put:
      operationId: GroupsOutboundAllowRulesReview_ApproveWithChanges
      summary: Groups Update Outbound Allow Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/protection/rules/outbound/review/reject/{ruleId}':
    delete:
      operationId: GroupsOutboundAllowRulesReview_Deny
      summary: Groups ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/groups/{groupType}/{groupId}/protection/rules/outbound/{ruleId}':
    get:
      operationId: GroupsOutboundAllowRule_Get
      summary: Groups Get Outbound Allow Rule
      description: Returns the properties of an Outbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    put:
      operationId: GroupsOutboundAllowRule_Update
      summary: Groups Update Outbound Allow Rule
      description: Returns the properties of the updated Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    delete:
      operationId: GroupsOutboundAllowRule_Delete
      summary: Groups Remove Outbound Allow Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/successors':
    get:
      operationId: GroupsMembers_List
      summary: List Group members
      description: Returns a list of potential members for a group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/includeNestedMembersQueryParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  '/groups/{groupType}/{groupId}/successors/filters':
    get:
      operationId: GroupSuccessorsFilters_List
      summary: Get groups successors filters
      description: Returns a list of filters for Group members.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /profile:
    get:
      operationId: Profile_Get
      description: Get user profile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profileResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Profile
  /profile/environments:
    get:
      operationId: Profile_GetEnvironments
      tags:
        - Profile
      summary: 'Get all environments'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  environments:
                    type: array
                    items:
                      type: object
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
  /protection/reactive-policies/distribution:
    get:
      operationId: MFAPoliciesDistribution_List
      summary: MFA distribution
      description: Returns and object with MFA distrubiton.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyDistribution'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA
  /protection/reactive-policies/inbound:
    get:
      operationId: MFAInboundPolicies_List
      summary: List Inbound MFA Policies
      description: Returns a list of inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
    post:
      operationId: MFAInboundPolicies_Create
      summary: Add Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after creation.
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/dst-candidates:
    get:
      operationId: MFAInboundPoliciesDestinationCandidates_List
      summary: Get destination assets for Inbound MFA Policy
      description: Returns a list of candidates for the destination of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/excluded-src-candidates:
    get:
      operationId: MFAInboundPoliciesExcludedSourceCandidates_List
      summary: Fet excluded source asset candidates for Inbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/filters:
    get:
      operationId: MFAInboundPoliciesFilters_List
      summary: List Inbound MFA Policy Filters
      description: Returns a list of filters for inbound MFA policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/filters/dst-candidates:
    get:
      operationId: MFAInboundPoliciesDestinationCandidatesFilters_List
      summary: Get Inbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/filters/src-candidates:
    get:
      operationId: MFAInboundPoliciesSourceCandidatesFilters_List
      summary: List Inbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/filters/src-users-candidates:
    get:
      operationId: MFAInboundPoliciesSourceUsersCandidatesFilters_List
      summary: Get Inbound MFA Policies Source Users Filters
      description: Resturns a list of filters for source users on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/mfa-methods:
    get:
      operationId: MFAInboundPoliciesMFAMethods_List
      summary: List Inbound MFA Policy Methods
      description: Returns a list of MFA methods for inbound MFA policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/src-candidates:
    get:
      operationId: MFAInboundPoliciesSourceCandidates_List
      summary: List Inbound MFA Polcies Source Candidates
      description: Returns a list of source candidates on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/src-users-candidates:
    get:
      operationId: MFAInboundPoliciesSourceUserCandidates_List
      summary: List Inbound MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/simulate:
    get:
      operationId: MFAInboundPoliciesSimulate_Test
      summary: Simulate Inbound MFA access
      description: Returns a list of MFA policies that would match the simulaton.
      parameters:
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderedReactivePoliciesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/simulate/dst-candidates:
    get:
      operationId: MFAInboundPoliciesSimulateDestinationCandidates_List
      summary: List Inbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/simulate/src-candidates:
    get:
      operationId: MFAInboundPoliciesSimulateSourceCandidates_List
      summary: List Inbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/simulate/src-users-candidates:
    get:
      operationId: MFAInboundPoliciesSimulateSourceUserCandidates_List
      summary: List Inbound MFA Simulation Source User Candidates
      description: Returns a list of source user candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  '/protection/reactive-policies/inbound/{reactivePolicyId}':
    get:
      operationId: MFAInboundPolicies_Get
      summary: Get Inbound MFA Policy
      description: Returns a inbound MFA policy object.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
    put:
      operationId: MFAInboundPolicies_Update
      summary: Update Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
    delete:
      operationId: MFAInboundPolicies_Delete
      summary: Remove Inbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/outbound:
    get:
      operationId: MFAOutboundPolicies_List
      summary: List Outbound MFA Policies
      description: Returns a list of outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
    post:
      operationId: MFAOutboundPolicies_Create
      summary: Add Outbound MFA Policy
      description: Returns a the properties of outbound MFA policy created.
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/dst-candidates:
    get:
      operationId: MFAOutboundPoliciesDestinationCandidates_List
      summary: List Outbound MFA Policies Destination Candidates
      description: Returns a list of destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/excluded-src-candidates:
    get:
      operationId: MFAOutboundPoliciesExcludedSourceCandidates_List
      summary: Fet excluded source asset candidates for Outbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/filters:
    get:
      operationId: MFAOutboundPoliciesFilters_Get
      summary: List Outbound MFA Policies Filters
      description: Returns a list of filters for outbound MFA policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/filters/dst-candidates:
    get:
      operationId: MFAOutboundPoliciesDestinationCandidatesFilters_List
      summary: List Outbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/filters/src-candidates:
    get:
      operationId: MFAOutboundPoliciesSourceCandidatesFilters_List
      summary: Get Outbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/filters/src-users-candidates:
    get:
      operationId: MFAOutboundPoliciesSourceUsersCandidatesFilters_List
      summary: List Outbound MFA Policies Source Users Candidates Filters
      description: Returns a list of filsters for source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/mfa-methods:
    get:
      operationId: MFAOutboundPoliciesMFAMethods_List
      summary: List Outbound MFA Policies Methods
      description: Returns a list of MFA methods on outbound MFA policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/src-candidates:
    get:
      operationId: MFAOutboundPoliciesSourceCandidates_List
      summary: List Outbound MFA Policies Source Candidates
      description: Returns a list of source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/src-users-candidates:
    get:
      operationId: MFAOutboundPoliciesSourceUserCandidates_List
      summary: Get Outbound MFA Policies Source Users Candidates
      description: Returns a list of source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/simulate:
    get:
      operationId: MFAOutboundPoliciesSimulate_Test
      summary: Simulate Outbound MFA access
      description: Returns a list of outbound MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderedReactivePoliciesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/simulate/dst-candidates:
    get:
      operationId: MFAOutboundPoliciesSimulateDesinationCandidates_List
      summary: Get Outbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on outbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/simulate/src-candidates:
    get:
      operationId: MFAOutboundPoliciesSimulateSourceCandidates_List
      summary: List Outbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on outbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/simulate/src-users-candidates:
    get:
      operationId: MFAOutboundPoliciesSimulateSourceUserCandidates_List
      summary: Get Outbound MFA Simulation Source Users Candidates
      description: Returns a list of source users candidates on outbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  '/protection/reactive-policies/outbound/{reactivePolicyId}':
    get:
      operationId: MFAOutboundPolicies_Get
      summary: Get Outbound MFA Policy
      description: Returns the properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
    put:
      operationId: MFAOutboundPolicies_Update
      summary: Update Outbound MFA Policy
      description: Returns the updated properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Reactive Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
    delete:
      operationId: MFAOutboundPolicies_Delete
      summary: Remove Outbound MFA Policy
      description: Returns an empty object.
      parameters:
        - name: reactivePolicyId
          in: path
          description: The id of the rule
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/statistics:
    get:
      operationId: MFAPoliciesStatistics_List
      summary: Get MFA statistics
      description: Returns an object with MFA statistics.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePoliciesStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA
  '/protection/rules/distribution/{ruleId}':
    get:
      operationId: RulesDistribution_Get
      summary: Get distribution of rule hit count
      description: Returns an object with rules distribution.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/ruleDirectionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleDistribution'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules
  '/protection/rules/history/{ruleId}':
    get:
      operationId: RulesHistory_Get
      summary: Get a historic version of an inbound allow rule
      description: Returns the properties of the previous version of the rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/updateIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historyRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules
  /protection/rules/inbound-allow:
    get:
      operationId: InboundAllowRules_List
      summary: List Inbound Allow Rules
      description: Returns a list of Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Allow
    post:
      operationId: InboundAllowRules_Create
      summary: Create Inbound Allow Rule
      description: Returns the properties of the created Inbound Allow rule.
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Allow
  /protection/rules/inbound-allow/export:
    post:
      operationId: InboundAllowRules_Export
      summary: Export Inbound Allow Rules
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Allow
  '/protection/rules/inbound-allow/export/csv/{exportId}':
    get:
      operationId: InboundAllowRulesExport_Get
      summary: Download Inbound Allow Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Rules Inbound Allow
  /protection/rules/inbound-allow/excluded-local-candidates:
    get:
      operationId: InboundAllowRulesExcludedDestinationCandidates_List
      summary: Get Inbound Allow Rules Excluded Destination Candidates
      description: Returns a list of excluded destionation candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Allow
  /protection/rules/inbound-allow/filters:
    get:
      operationId: InboundAllowRulesFilters_List
      summary: List Inbound Allow Rules Filters
      description: Returns a list of filters for Inbound Allow rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Allow
  /protection/rules/inbound-allow/filters/local-candidates:
    get:
      operationId: InboundAllowRulesDesinationCandidatesFilters_List
      summary: List Inbound Allow Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Inbound Allow rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Allow
  /protection/rules/inbound-allow/filters/remote-candidates:
    get:
      operationId: InboundAllowRulesSourceCandidatesFilters_List
      summary: Get Inbound Allow Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound Allow rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Allow
  /protection/rules/inbound-allow/local-candidates:
    get:
      operationId: InboundAllowRulesDestinationCandidates_List
      summary: List Inbound Allow Rules Destination Candidates
      description: Returns a list of destionation candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Allow
  /protection/rules/inbound-allow/remote-candidates:
    get:
      operationId: InboundAllowRulesSourceCandidates_List
      summary: List Inbound Allow Rules Source Candidates
      description: Returns a list of source candidates for Inbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Allow
  '/protection/rules/inbound-allow/review/approve/{ruleId}':
    put:
      operationId: InboundAllowRulesReview_Approve
      summary: Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/protection/rules/inbound-allow/review/approve-with-changes/{ruleId}':
    put:
      operationId: InboundAllowRulesReview_ApproveWithChanges
      summary: Update Inbound Allow Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Allow
  '/protection/rules/inbound-allow/review/reject/{ruleId}':
    delete:
      operationId: InboundAllowRulesReview_Deny
      summary: ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/protection/rules/inbound-allow/{ruleId}':
    get:
      operationId: InboundAllowRule_Get
      summary: Get Inbound Allow Rule
      description: Returns the properties of an Inbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Allow
    put:
      operationId: InboundAllowRule_Update
      summary: Update Inbound Allow Rule
      description: Returns the properties of the update Inbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Allow
    delete:
      operationId: InboundAllowRule_Delete
      summary: Remove Inbound Allow Rule
      description: Returns an empty object.
      parameters:
        - name: ruleId
          in: path
          description: The id of the rule
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Allow
  /protection/rules/inbound-block:
    get:
      operationId: InboundBlockRules_List
      summary: List Inbound Block Rules
      description: Returns a list of Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Block
    post:
      operationId: InboundBlockRules_Create
      summary: Create Inbound Block Rule
      description: Returns the properties of the created Inbound Block rule.
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Block
  /protection/rules/inbound-block/export:
    post:
      operationId: InboundBlockRules_Export
      summary: Export Inbound Block Rules
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Block
  '/protection/rules/inbound-block/export/csv/{exportId}':
    get:
      operationId: InboundBlockRulesExport_Get
      summary: Download Inbound Block Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Rules Inbound Block
  /protection/rules/inbound-block/excluded-local-candidates:
    get:
      operationId: InboundBlockRulesExcludedDestinationCandidates_List
      summary: List Inbound Block Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Block
  /protection/rules/inbound-block/filters:
    get:
      operationId: InboundBlockRulesFilters_Get
      summary: List Inbound Block Rules Filters
      description: Returns a list of filters for Inbound Block rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Block
  /protection/rules/inbound-block/filters/local-candidates:
    get:
      operationId: InboundBlockRulesDestinationCandidatesFilters_List
      summary: List Inbound Block Rules Desination Candidates Filters
      description: Returns a list of filters destination candidates for Inbound Block rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Block
  /protection/rules/inbound-block/filters/remote-candidates:
    get:
      operationId: InboundBlockRulesSourceCandidatesFilters_List
      summary: List Inbound Block Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound Block rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Block
  /protection/rules/inbound-block/local-candidates:
    get:
      operationId: InboundBlockRulesDestinationCandidates_List
      summary: List Inbound Block Rules Desintation Candidates
      description: Returns a list of destination candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Block
  /protection/rules/inbound-block/remote-candidates:
    get:
      operationId: InboundBlockRulesSourceCandidates_List
      summary: List Inbound Block Rules Source Candidates
      description: Returns a list of source candidates for Inbound Block rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Block
  '/protection/rules/inbound-block/review/approve/{ruleId}':
    put:
      operationId: InboundBlockRulesReview_Approve
      summary: Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/protection/rules/inbound-block/review/approve-with-changes/{ruleId}':
    put:
      operationId: InboundBlockRulesReview_ApproveWithChanges
      summary: Update Inbound Block Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Block
  '/protection/rules/inbound-block/review/reject/{ruleId}':
    delete:
      operationId: InboundBlockRulesReview_Deny
      summary: ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/protection/rules/inbound-block/{ruleId}':
    get:
      operationId: InboundBlockRule_Get
      summary: Get Inbound Block Rule
      description: Returns the properties of the Inbound Block rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Block
    put:
      operationId: InboundBlockRule_Update
      summary: Update Inbound Block Rule
      description: Returns the properties of the updated Inbound Block rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Block
    delete:
      operationId: InboundBlockRule_Delete
      summary: Remove Inbound Block Rule
      description: Returns an empty object.
      parameters:
        - name: ruleId
          in: path
          description: The id of the rule
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound Block
  /protection/rules/outbound-block:
    get:
      operationId: OutboundBlockRules_List
      summary: List Outbound Block Rules
      description: Returns a list of outbound block rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Block
    post:
      operationId: OutboundBlockRules_Create
      summary: Create Outbound Block Rule
      description: Returns the properties of the created outbound block rule.
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Block
  /protection/rules/outbound-block/export:
    post:
      operationId: OutboundBlockRules_Export
      summary: Export Outbound Block Rules
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Block
  '/protection/rules/outbound-block/export/csv/{exportId}':
    get:
      operationId: OutboundBlockRulesExport_Get
      summary: Download Outbound Block Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Rules Outbound Block
  /protection/rules/outbound-block/excluded-local-candidates:
    get:
      operationId: OutboundBlockRulesExcludedSourceCandidates_List
      summary: List Outbound Block Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Block
  /protection/rules/outbound-block/filters:
    get:
      operationId: OutboundBlockRulesFilters_List
      summary: List Outbound Block Rules Filters
      description: Returns a list of filters for outbound block rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Block
  /protection/rules/outbound-block/filters/local-candidates:
    get:
      operationId: OutboundBlockRulesSourceCandidatesFilters_List
      summary: List Outbound Block Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for outbound block rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Block
  /protection/rules/outbound-block/filters/remote-candidates:
    get:
      operationId: OutboundBlockRulesDestinationCandidatesFilters_List
      summary: List Outbound Block Rules Destination Canidates Filters
      description: Returns a list of filters for destination candidates for outbound block rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Block
  /protection/rules/outbound-block/local-candidates:
    get:
      operationId: OutboundBlockRulesSourceCandidates_List
      summary: List Outbound Block Rules Source Candidates
      description: Returns a list of source candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Block
  /protection/rules/outbound-block/remote-candidates:
    get:
      operationId: OutboundBlockRulesDestinationCandidates_List
      summary: List Outbound Block Rules Destination Candidates
      description: Returns a list of destioantion candidates for outbound block rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Block
  '/protection/rules/outbound-block/review/approve/{ruleId}':
    put:
      operationId: OutboundBlockRulesReview_Approve
      summary: Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/protection/rules/outbound-block/review/approve-with-changes/{ruleId}':
    put:
      operationId: OutboundBlockRulesReview_ApproveWithChanges
      summary: Update Outbound Block Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Block
  '/protection/rules/outbound-block/review/reject/{ruleId}':
    delete:
      operationId: OutboundBlockRulesReview_Deny
      summary: ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/protection/rules/outbound-block/{ruleId}':
    get:
      operationId: OutboundBlockRule_Get
      summary: Get Outbound Block Rule
      description: Returns the properties of an outbound block rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Block
    put:
      operationId: OutboundBlockRule_Update
      summary: Update Outbound Block Rule
      description: Returns the properties of the updated outbound block rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Block
    delete:
      operationId: OutboundBlockRule_Delete
      summary: Remove Outbound Block Rule
      description: Returns an empty object.
      parameters:
        - name: ruleId
          in: path
          description: The id of the rule
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Block
  /protection/rules/outbound:
    get:
      operationId: OutboundAllowRules_List
      summary: List Outbound Allow Rules
      description: Returns a list of Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Allow
    post:
      operationId: OutboundAllowRules_Create
      summary: Create Outbound Allow Rule
      description: Returns the properties of the created Outbound Allow rule.
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Allow
  /protection/rules/outbound/excluded-local-candidates:
    get:
      operationId: OutboundAllowRulesExcludedSourceCandidates_List
      summary: List Outbound Allow Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Allow
  /protection/rules/outbound/export:
    post:
      operationId: OutboundAllowRules_Export
      summary: Export Outbound Allow Rules
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Allow
  '/protection/rules/outbound/export/csv/{exportId}':
    get:
      operationId: OutboundAllowRulesExport_Get
      summary: Download Outbound Allow Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Rules Outbound Allow
  /protection/rules/outbound/filters:
    get:
      operationId: OutboundAllowRulesFilters_List
      summary: List Outbound Allow Rules Filters
      description: Returns a list of filters for Outbound Allow rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Allow
  /protection/rules/outbound/filters/excluded-local-candidates:
    get:
      operationId: OutboundAllowRulesExcludedSourceCandidatesFilters_List
      summary: List Outbound Allow Rules Excluded Source Candidates Filters
      description: Returns a list of filters for excluded source candidates for Outbound Allow rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Allow
  /protection/rules/outbound/filters/local-candidates:
    get:
      operationId: OutboundAllowRulesSourceCandidatesFilters_List
      summary: List Outbound Allow Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound Allow rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Allow
  /protection/rules/outbound/filters/remote-candidates:
    get:
      operationId: OutboundAllowRulesDestinationCandidatesFilters_List
      summary: List Outbound Allow Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound Allow rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Allow
  /protection/rules/outbound/local-candidates:
    get:
      operationId: OutboundAllowRulesSourceCandidates_List
      summary: List Outbound Allow Rules Source Candidates
      description: Returns a list of source candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Allow
  /protection/rules/outbound/remote-candidates:
    get:
      operationId: OutboundAllowRulesDestinationCandidates_List
      summary: List Outbound Allow Destination Candidates
      description: Returns a list of destination candidates for Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Allow
  '/protection/rules/outbound/review/approve/{ruleId}':
    put:
      operationId: OutboundAllowRulesReview_Approve
      summary: Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/protection/rules/outbound/review/approve-with-changes/{ruleId}':
    put:
      operationId: OutboundAllowRulesReview_ApproveWithChanges
      summary: Update Outbound Allow Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Allow
  '/protection/rules/outbound/review/reject/{ruleId}':
    delete:
      operationId: OutboundAllowRulesReview_Deny
      summary: ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/protection/rules/outbound/{ruleId}':
    get:
      operationId: OutboundAllowRule_Get
      summary: Get Outbound Allow Rule
      description: Returns the properties of an Outbound Allow rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Allow
    put:
      operationId: OutboundAllowRule_Update
      summary: Update Outbound Allow Rule
      description: Returns the properties of the updated Outbound Allow rules.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Allow
    delete:
      operationId: OutboundAllowRule_Delete
      summary: Remove Outbound Allow Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound Allow
  /protection/rules/statistics:
    get:
      operationId: RulesStatistics_Get
      summary: Get rules statistics
      description: Returns an object with rule statistics.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules
  /sessions:
    get:
      operationId: Sessions_List
      summary: List Connect sessions
      description: Returns a list of Connect sessions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Sessions
  /sessions/filters:
    get:
      operationId: SessionsFilters_List
      summary: List Sessions Filters
      description: Returns a list of filters for sessions.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Sessions
  '/sessions/{sessionId}/revoke':
    post:
      operationId: Session_Revoke
      summary: Revoke a Connect session
      description: Revoke a Connect session.
      parameters:
        - $ref: '#/components/parameters/sessionIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Sessions
  /settings/access-tokens:
    get:
      operationId: AccessTokens_List
      summary: Get all machine access tokens
      description: Get all machine access tokens
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/accessTokenInfo'
                x-examples:
                  example-1:
                    items:
                      - clientId: 'm:695d7d50e8c0c2864c985e72de1a2fdef7dfdc6e'
                        accessType: 2
                        name: asd
                        expiry: '2024-06-27T08:21:21.000Z'
                        issuedAt: '2022-06-27T08:21:21.000Z'
                        createdAt: '2022-06-27T08:21:21.000Z'
                      - clientId: 'm:89879dabe83936376121296e74123c9e3d2ec92f'
                        accessType: 2
                        name: test
                        expiry: '2024-06-26T15:49:10.000Z'
                        issuedAt: '2022-06-26T15:49:10.000Z'
                        createdAt: '2022-06-26T15:49:10.000Z'
                      - clientId: 'm:8ee92624445d106a06e346d0c0a41bbfa77e1446'
                        accessType: 2
                        name: TEST
                        expiry: '2024-06-26T15:49:05.000Z'
                        issuedAt: '2022-06-26T15:49:05.000Z'
                        createdAt: '2022-06-26T13:28:24.000Z'
                      - clientId: 'm:6a73f5b14aa8557c527a99ae601e648a9c56b504'
                        accessType: 2
                        name: asdf
                        expiry: '2024-06-26T12:13:08.000Z'
                        issuedAt: '2022-06-26T12:13:08.000Z'
                        createdAt: '2022-06-26T12:08:25.000Z'
                      - clientId: 'm:4a21e3d73c58bc0040cff93b508d361bef81a83f'
                        accessType: 2
                        name: fasdf
                        expiry: '2022-07-26T12:08:14.000Z'
                        issuedAt: '2022-06-26T12:08:14.000Z'
                        createdAt: '2022-06-23T16:53:01.000Z'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Access Tokens
    post:
      operationId: AccessTokens_Create
      summary: Create machine access token
      description: Create machine access token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                expiry:
                  $ref: '#/components/schemas/epochMillis'
                accessType:
                  $ref: '#/components/schemas/accessTypeEnum'
              x-examples:
                example-1:
                  name: read only example
                  expiry: '2024-06-27T08:45:01.623Z'
                  accessType: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  expiry:
                    type: string
                  accessType:
                    $ref: '#/components/schemas/accessTypeEnum'
                x-examples:
                  example-1:
                    name: Read only access token
                    expiry: '2024-06-27T08:45:14.129Z'
                    accessType: 2
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Access Tokens
  '/settings/access-tokens/{clientId}':
    put:
      operationId: AccessTokens_Regenerate
      summary: Regenerate machine access token
      description: Regenerate machine access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                expiry:
                  $ref: '#/components/schemas/epochMillis'
              x-examples:
                example-1:
                  expiry: 1719477497062
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Access Tokens
    delete:
      operationId: AccessTokens_Delete
      summary: Delete access token
      description: Remove machine access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Access Tokens
  /settings/ai/exclusion/network/both:
    get:
      operationId: AIExclusionNetworkBoth_Get
      summary: Your GET endpoint
      description: 'Get AI network exclusion for clients and servers: lists of tcp/udp ports / ports ranges + boolean for icmp protocol, and a list of processes to ignore during learning.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aiExclusionInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Settings AI
    put:
      operationId: AIExclusionNetworkBoth_Update
      summary: ''
      description: 'Set AI network exclusion for clients and servers: lists of tcp/udp ports / ports ranges + boolean for icmp protocol, and a list of processes to ignore during learning.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aiExclusionInfo'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aiExclusionInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Settings AI
  /settings/ai/exclusion/network/client:
    get:
      operationId: AIExclusionNetworkClient_Get
      summary: Your GET endpoint
      description: 'Get AI network exclusion for clients: lists of tcp/udp ports / ports ranges + boolean for icmp protocol, and a list of processes to ignore during learning.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aiExclusionInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Settings AI
    put:
      operationId: AIExclusionNetworkClient_Update
      summary: ''
      description: 'Set AI network exclusion for clients: lists of tcp/udp ports / ports ranges + boolean for icmp protocol, and a list of processes to ignore during learning.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aiExclusionInfo'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aiExclusionInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Settings AI
  /settings/ai/exclusion/network/server:
    get:
      operationId: AIExclusionNetworkServer_Get
      summary: Your GET endpoint
      description: 'Get AI network exclusion for servers: lists of tcp/udp ports / ports ranges + boolean for icmp protocol, and a list of processes to ignore during learning.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aiExclusionInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Settings AI
    put:
      operationId: AIExclusionNetworkServer_Update
      summary: ''
      description: 'Set AI network exclusion for servers: lists of tcp/udp ports / ports ranges + boolean for icmp protocol, and a list of processes to ignore during learning.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aiExclusionInfo'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aiExclusionInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Settings AI
  /settings/ai/exclusion/src-candidates:
    get:
      operationId: AIExclusionSourceCandidates_Get
      summary: Get AI excluded source entity candidates.
      description: Get AI source candidates to ignore during learning.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetCandidateList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings AI
  /settings/ai/exclusion/src-entities:
    get:
      operationId: AIExclusionSourceEntities_Get
      summary: Get AI excluded source entity settings.
      description: Get AI source entities to ignore during learning.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/assetBasicInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings AI
    put:
      operationId: AIExclusionSourceEntities_Update
      summary: ''
      description: Set AI source entities to ignore during learning.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aiExclusionSourceEntitiesBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings AI
  /settings/ai/rule-review:
    get:
      operationId: SettingsAiRuleReview_Get
      summary: Get Rules Review under AI Settings
      description: Get AI rules review settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAiRuleReview'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings AI Rules Review
    put:
      operationId: SettingsAiRuleReview_Update
      summary: Set Rule Review under AI Settings
      description: Update AI rule review settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAiRuleReview'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAiRuleReview'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings AI Rules Review
  /settings/asset-management/active-directory:
    get:
      operationId: SettingsAD_Get
      summary: Get AD settings in Asset Management
      description: Get the AD settings in Asset Managment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAdInfoResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    post:
      operationId: SettingsAD_New
      summary: Add AD settings in Asset Managment
      description: Set the AD settings in Asset Managment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdInfoBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAdInfoBody'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/candidates/monitored:
    get:
      operationId: SettingsADMonitoredCandidates_Get
      summary: List candidates for monitoring for an AD forest
      description: Returns a list of monitoring candidates for an AD forest.
      parameters:
        - $ref: '#/components/parameters/forestIdQueryParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/candidates/protected:
    get:
      operationId: SettingsADProtectedCandidates_Get
      summary: List candidates for protection for an AD forest
      description: Returns a list of protection candidates for an AD forest.
      parameters:
        - $ref: '#/components/parameters/forestIdQueryParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/rediscover:
    put:
      operationId: AD_Rediscover
      summary: Rediscover monitored assets
      description: Rediscover monitored assets
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  '/settings/asset-management/active-directory/{forestId}':
    put:
      operationId: SettingsAD_Update
      summary: Update AD Settings in Asset Managment
      description: Update AD forest settings.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdInfoBodySet'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    delete:
      operationId: SettingsAD_Delete
      summary: Delete forest from AD Settings in Asset Managment
      description: Delete AD forest settings.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  '/settings/asset-management/active-directory/{forestId}/groups':
    put:
      operationId: SettingsADAutomationGroups_Update
      summary: Update Automation Groups for a Forest in Asset Managment
      description: Update Automation Groups for an AD forest setting.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdAutomationGroupsBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  '/settings/asset-management/active-directory/{forestId}/secondary':
    post:
      operationId: SettingsAdSecondary_Create
      summary: Add a secondary AD settings in Asset Managment
      description: Add a secondary AD settings in Asset Managment
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdSecondary'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  '/settings/asset-management/active-directory/{forestId}/secondary/{domainId}':
    delete:
      operationId: SettingsAdSecondary_Delete
      summary: Remove Secondary Active Directory Settings
      description: Returns an empty reponse.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
        - $ref: '#/components/parameters/domainIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsAdSecondary_Update
      summary: Update a secondary AD settings in Asset Managment
      description: Update a secondary AD settings in Asset Managment
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
        - $ref: '#/components/parameters/domainIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdInfoSecondaryBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/ansible:
    get:
      operationId: SettingsAnsible_Get
      summary: Get Ansible settings in Asset Managment
      description: Get the Ansible settings in Asset Managment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAnsible'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsAnsible_Update
      summary: Set Ansible settings in Asset Managment
      description: Get the Ansible settings in Asset Managment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAnsibleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAnsible'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/linux/rediscover:
    put:
      operationId: Linux_Rediscover
      summary: Rediscover monitored assets from Linux
      description: Rediscover monitored assets from Ansible
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/linux/setup:
    get:
      operationId: SettingsLinuxSetup_Get
      summary: Get linux setup settings in Asset Managment
      description: Get the linux setup settings in Asset Managment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLinuxSetup'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsLinuxSetup_Update
      summary: Set linux setup settings in Asset Managment
      description: Update the linux setup settings in Asset Managment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsLinuxSetupBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLinuxSetup'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/linux/user:
    get:
      operationId: SettingsLinuxUser_Get
      summary: Get linux user settings in Asset Managment
      description: Get the linux user settings in Asset Managment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLinuxUser'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsLinuxUser_Update
      summary: Set linux user settings in Asset Managment
      description: Update the linux user settings in Asset Managment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsLinuxUserBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLinuxUser'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-managers:
    get:
      operationId: Settings-AssetManagers_List
      summary: Get asset managers summary
      description: List asset managers
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetManagersList'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Managers
    post:
      operationId: Settings-AssetManagers_Add
      summary: Add asset managers
      description: Add asset manager to entity.
      requestBody:
        description: Array of assets to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAssetsManagersBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetManagersList'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Managers
    delete:
      operationId: Settings-AssetManagers_Delete
      summary: Delete asset managers
      description: Remove asset managers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                entityIds:
                  type: array
                  items:
                    $ref: '#/components/schemas/groupIdOrAssetId'
                managerIds:
                  type: array
                  items:
                    $ref: '#/components/schemas/groupIdOrUserId'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Managers
  /settings/auth:
    get:
      operationId: SettingsAuth_Get
      summary: Get portal session timeout setting
      description: Get the portal security settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAuth'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Portal Security
    put:
      operationId: SettingsAuth_Put
      summary: Set portal session timeout setting
      description: Set the portal security settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAuthBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Portal Security
  /settings/azure-ad/credentials:
    get:
      operationId: SettingsAAD_Get
      summary: Get Azure AD Settings
      description: Get Azure AD Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAzureAd'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsAAD_Update
      summary: Set Azure AD Settings
      description: Get Azure AD Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAzureAdBody'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    delete:
      operationId: SettingsAAD_Remove
      summary: Remove Azure AD Settings
      description: Remove Azure AD Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/cloud-connector/access-tokens:
    get:
      operationId: CloudConnectorAccessTokens_List
      summary: Get all cloud connector provisioning access tokens
      description: Get all cloud connector provisioning access tokens
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/accessTokenInfo'
              examples:
                example-1:
                  value:
                    items:
                      - clientId: string
                        name: string
                        expiry: string
                        issuedAt: string
                        createdAt: string
                        accessType:
                          id: 1
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Cloud Connector
    post:
      operationId: CloudConnectorAccessTokens_Create
      summary: Create cloud connector provisioning access token
      description: Create cloud connector provisioning access token
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                expiry:
                  $ref: '#/components/schemas/epochMillis'
                accessType:
                  type: integer
              x-examples:
                example-1:
                  name: Cloud Connector test
                  expiry: '2024-06-27T13:33:09.076Z'
                  accessType: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Cloud Connector
  '/settings/cloud-connector/access-tokens/{clientId}':
    put:
      operationId: CloudConnectorAccessTokens_Regenerate
      summary: Regenerate cloud connector provisioning access token
      description: Regenerate cloud connector provisioning access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                expiry:
                  $ref: '#/components/schemas/epochMillis'
              x-examples:
                example-1:
                  expiry: 1719477497062
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Cloud Connector
    delete:
      operationId: CloudConnectorAccessTokens_Delete
      summary: Delete cloud connector provisioning access token
      description: Delete cloud connector provisioning access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      responses:
        '201':
          description: Created
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Cloud Connector
  /settings/connect/client/auto-update:
    get:
      operationId: SettingsConnectClientAutoUpdate_Get
      summary: Get Connect client auto update settings
      description: Get Connect client auto update in Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsConnectClientAutoUpdate'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
    put:
      operationId: SettingsConnectClientAutoUpdate_Update
      summary: Set Connect client auto update settings
      description: Set Connect client auto update settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsConnectClientAutoUpdateBody'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/regions:
    get:
      operationId: SettingsConnectRegions_List
      summary: List Connect Regions
      description: List Connect Regions in Settings
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connectRegionsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
    post:
      operationId: SettingsConnectRegions_Create
      summary: Create a Connect region
      description: Create a Connect region in Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectRegionBody'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  '/settings/connect/regions/{regionId}':
    put:
      operationId: SettingsConnectRegion_Update
      summary: Update a Connect Region in Settings
      description: Update a Connect Region in Settings
      parameters:
        - $ref: '#/components/parameters/connectRegionIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectRegionBody'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
    delete:
      operationId: SettingsConnectRegion_Delete
      summary: Delete a Connect Region
      description: Delete a Connect Region in Settings
      parameters:
        - $ref: '#/components/parameters/connectRegionIdParameter'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/servers:
    get:
      operationId: SettingsConnectServers_List
      summary: List Connect Servers
      description: List Connect Servers in Settings
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connectServersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/servers/filters:
    get:
      operationId: SettingsConnectServersFilters_List
      summary: List Connect Server filters
      description: List Connect Server filters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  '/settings/connect/servers/{connectServerId}':
    put:
      operationId: SettingsConnectServers_Update
      summary: Update Connect Server
      description: Update Connect Server in Settings
      parameters:
        - $ref: '#/components/parameters/connectServerIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectServerBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config:
    get:
      operationId: SettingsConnectUserAccessConfig_List
      summary: List Connect User Access Configurations
      description: List Connect User Access Configurations in Settings
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connectUserAccessConfigList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
    post:
      operationId: SettingsConnectUserAccessConfig_Create
      summary: Create a Connect User Access Configuration
      description: Create a Connect User Access Configuration in Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectUserAccessConfigBody'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Settings Connect
  /settings/connect/user-access-config/assets-candidates:
    get:
      operationId: SettingsConnectUserAccessConfigAssetsCandidates_List
      summary: Get user access configuration excluded assets candidates Candidates
      description: Returns a list of candidates for user access config excluded assets.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config/destinations-candidates:
    get:
      operationId: SettingsConnectUserAccessConfigDestinationsCandidates_List
      summary: Get user access configuration excluded destinations candidates Candidates
      description: Returns a list of candidates for user access config excluded destinations.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config/excluded-users-candidates:
    get:
      operationId: SettingsConnectUserAccessConfigExcludedSourceUsersCandidates_List
      summary: Get user access configuration xxcluded source users candidates Candidates
      description: Returns a list of candidates for user access config excluded source users.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config/regions-candidates:
    get:
      operationId: SettingsConnectUserAccessConfigAllowedRegionsCandidates_List
      summary: Get user access configuration allowed regions Candidates
      description: Returns a list of candidates for user access config allowed regions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connectUserAccessConfigList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config/users-candidates:
    get:
      operationId: SettingsConnectUserAccessConfigSourceUsersCandidates_List
      summary: Get user access configuration source users candidates Candidates
      description: Returns a list of candidates for user access config source users.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  '/settings/connect/user-access-config/{userAccessConfigId}':
    put:
      operationId: SettingsConnectUserAccessConfig_Update
      summary: Update a Connect User Access Configuration
      description: Update a Connect User Access Configuration in Settings
      parameters:
        - $ref: '#/components/parameters/userAccessConfigParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectUserAccessConfigBody'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
    delete:
      operationId: SettingsConnectUserAccessConfig_Delete
      summary: Delete a Connect User Access Configuration
      description: Delete a Connect User Access Configuration in Settings
      parameters:
        - $ref: '#/components/parameters/userAccessConfigParameter'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/data-collection/activities:
    get:
      operationId: SettingsActivities_Get
      summary: Get Activities settings in Data Collection
      description: Get Activities settings in Data Collection
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsActivities'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Activities
    put:
      operationId: SettingsActivities_Update
      summary: Set Activities settings in Data Collection
      description: Update the Activities settings in Data Collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsActivitiesBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Activities
  /settings/ext-auth:
    get:
      operationId: SettingsPushNotifications_Get
      summary: Get Push Notificaitons Settings
      description: Get Push Notifications Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsPushNotificaitionsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Push Notifications
  '/settings/ext-auth/{pushIdentityProviderId}':
    post:
      operationId: SettingsPushNotifications_Create
      summary: Create Push Notificiation in Settings.
      description: Create an push notifications settings
      parameters:
        - $ref: '#/components/parameters/pushIdentityProviderIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsPushNotificaitionsBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsPushNotificaitions'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Push Notifications
    put:
      operationId: SettingsPushNotifications_Update
      summary: Update Push Notificiation in Settings.
      description: Update a push notifications settings
      parameters:
        - $ref: '#/components/parameters/pushIdentityProviderIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsPushNotificaitionsBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsPushNotificaitions'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Push Notifications
    delete:
      operationId: SettingsPushNotifications_Delete
      summary: Remove Push Notifications Settings
      description: Returns an empty reponse.
      parameters:
        - $ref: '#/components/parameters/pushIdentityProviderIdParameter'
      responses:
        '204':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Push Notifications
  /settings/external-vpn:
    get:
      operationId: SettingsZpa_Get
      summary: Get ZPA settings in Integrations
      description: Get ZPA settings in Integrations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsZpa'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings ZPA
    put:
      operationId: SettingsZpa_Update
      summary: Set ZPA settings in Integrations
      description: Set ZPA settings in Integrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsZpaBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings ZPA
  /settings/firewall:
    get:
      operationId: SettingsFirewall_Get
      summary: List Firewall Settings
      description: Returns the properties of Firewall settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewall'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
    put:
      operationId: SettingsFirewall_Update
      summary: Update Firewall Settings
      description: Returns the properties of the updated Firewall settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsFirewallBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
  /settings/firewall/ignored-gpo-rules:
    get:
      operationId: SettingsFirewallIgnoredGPO_Get
      summary: List rules ignored for asset health from GPO in Firewall Settings
      description: Returns the properties of ignored GPO rules Firewall settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallIgnoredGPO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
    put:
      operationId: SettingsFirewallIgnoredGPO_Update
      summary: Update rules ignored for asset health from GPO in Firewall Settings
      description: Returns the properties of ignored GPO rules Firewall settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsFirewallIgnoredGPOBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallIgnoredGPO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
  /settings/firewall/windowsFirewallProfiles:
    get:
      operationId: SettingsFirewallProfiles_Get
      summary: List firewall profiles in Firewall Settings
      description: Returns the properties of firewall profiles in Firewall settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallProfiles'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
    put:
      operationId: SettingsFirewallProfiles_Update
      summary: Update firewall profiles in Firewall Settings
      description: Returns the properties of firewall profiles in Firewall settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsFirewallProfilesBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallProfiles'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
  /settings/firewall/windowsIgnoredRules:
    get:
      operationId: SettingsFirewallIgnoredRules_Get
      summary: List rules ignored for anti-tampering in Firewall Settings
      description: Returns the properties of ignored rules for anti-tampering Firewall settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallIgnoredRules'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
    put:
      operationId: SettingsFirewallIgnoredRules_Update
      summary: Update rules ignored for anti-tampering in Firewall Settings
      description: Returns he properties of ignored rules for anti-tampering Firewall settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsFirewallIgnoredRulesBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallIgnoredRules'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
  /settings/learning-config:
    get:
      operationId: SettingsLearningConfig_Get
      summary: Get Learning Config settings in Network Segementation
      description: Get Learning Config settings in Network Segementation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLearningConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Learning
    put:
      operationId: SettingsLearningConfig_Update
      summary: Set Learning Config settings in Network Segementation
      description: Update Learning Config settings in Network Segementation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsLearningConfigBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Learning
  /settings/identity-providers/default-application:
    get:
      operationId: SettingsDefaultApplication_Get
      summary: Get Default SSO Application settings in Identity Providers
      description: Get Default SSO Application settings in Identity Providers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsIdpDefaultApplication'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
    put:
      operationId: SettingsDefaultApplication_Update
      summary: Set Default SSO Application settings in Identity Providers
      description: Update the Default SSO Application settings in Identity Providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsIdpDefaultApplicationBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
  /settings/identity-providers/saml:
    get:
      operationId: SettingsIdp_Get
      summary: List identity providers settings in Identity Providers
      description: Get identity provider settings in Identity Providers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsIdpList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
    post:
      operationId: SettingsIdp_Create
      summary: Create identity provider settings in Identity Providers
      description: Create an identity provider settings in Identity Providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsIdpBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsIdp'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
  '/settings/identity-providers/saml/{identityProviderId}':
    put:
      operationId: SettingsIdp_Update
      summary: Update identity provider settings in Identity Providers
      description: Update identity provider settings in Identity Providers
      parameters:
        - $ref: '#/components/parameters/identityProviderIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsIdpBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsIdp'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
    delete:
      operationId: SettingsIdp_Delete
      summary: Remove Identity Provider Settings
      description: Returns an empty reponse.
      parameters:
        - $ref: '#/components/parameters/identityProviderIdParameter'
      responses:
        '204':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
  /settings/inbound/privileged-ports:
    get:
      operationId: SettingsPrivilegedPorts_Get
      summary: Get Privileged Ports settings in Network segmentation
      description: Get Privileged Ports settings in Network segmentation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsPrivilegedPorts'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Privileged Ports
    put:
      operationId: SettingsPrivilegedPorts_Update
      summary: Set Privileged Ports settings in Network segmentation
      description: Set Privileged Ports settings in Network segmentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsPrivilegedPortsBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
  /settings/jamf/credentials:
    get:
      operationId: SettingsJamfCredentials_Get
      summary: Get JAMF Credentials Settings
      description: Returns the properties for JAMF Credentials Settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsJamfCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsJamfCredentials_Update
      summary: Update JAMF credentials Settings
      description: Returns the upddated properties of JAMF Credentials settings.
      requestBody:
        description: JAMF credentials property
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsJamfCredentialsBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsJamfCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    delete:
      operationId: SettingsJamfCredentials_Delete
      summary: Remove JAMF Credentials Settings
      description: Returns an empty object.
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/notification:
    get:
      operationId: SettingsNotification_Get
      summary: Get Mail Notification Settings
      description: Returns the properties of the Mail Notification settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsNotification'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Mail Notifications
    put:
      operationId: SettingsNotification_Update
      summary: Update Mail Notification Settings
      description: Returns the properties of the updated Mail Notifications settings.
      requestBody:
        description: Mail notification properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsNotificationBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsNotification'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Mail Notifications
  /settings/protection-policies:
    get:
      operationId: ProtectionPolicies_List
      summary: List protection policies
      description: Returns a list of protection policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protectionPoliciesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Protection Policies
    post:
      operationId: ProtectionPolicies_Create
      summary: Add protection policy
      description: Returns the protection policy that was created.
      requestBody:
        description: Protection Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protectionPolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protectionPolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Protection Policies
  /settings/protection-policies/group-candidates:
    get:
      operationId: ProtectionPoliciesGroupCandidates_List
      summary: Get groups for protection policy
      description: Returns a list of candidates for protection policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Protection Policies
  '/settings/protection-policies/{protectionPolicyId}':
    delete:
      operationId: ProtectionPolicies_Delete
      summary: Remove protection policy
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/protectionPolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Protection Policies
    put:
      operationId: ProtectionPolicies_Update
      summary: Update protection policy
      description: Returns the updated settings for the protection policy.
      parameters:
        - $ref: '#/components/parameters/protectionPolicyIdParameter'
      requestBody:
        description: Protection Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protectionPolicyUpdateBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protectionPolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Protection Policies
  /settings/reactive-policy:
    get:
      operationId: SettingsMFADetection_Get
      summary: Get MFA Detection Settings
      description: Returns the properties of MFA detection settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsMfaDetectionResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA
    put:
      operationId: SettingsMFADetection_Update
      summary: Update MFA Detection Settings
      description: Returns the properties of the updated MFA detection settings.
      requestBody:
        description: MFA detection properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsMfaDetectionBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsMfaDetectionResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA
  /settings/reactive-policy/auth:
    get:
      operationId: SettingsMFAAuthentication_Get
      summary: Get MFA authentication settings
      description: Returns the properties of MFA authentication settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsMfaAuthenticationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA
    put:
      operationId: SettingsMFAAuthentication_Update
      summary: Update MFA Authentication Settings
      description: Returns an empty object.
      requestBody:
        description: MFA authentication properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsMfaAuthenticationBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA
  /settings/roles:
    get:
      operationId: Roles_List
      summary: List Roles
      description: Returns list of Roles.
      parameters:
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rolesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Roles
  /settings/roles/candidates:
    get:
      operationId: RolesCandidates_List
      summary: List Roles Candidates
      description: Returns list of candidates for Roles.
      parameters:
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/roleCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Roles
  '/settings/roles/{roleEntityId}':
    post:
      operationId: Roles_Create
      summary: Create Role
      description: Returns the properties of the added Role.
      parameters:
        - $ref: '#/components/parameters/roleEntityIdParameter'
      requestBody:
        description: Role properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/roleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Roles
    delete:
      operationId: Roles_Delete
      summary: Remove Role
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/roleEntityIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Roles
  /settings/system/internal-subnets:
    get:
      operationId: SettingsInternalSubnets_Get
      summary: Get Internal Subnets settings in System
      description: Get Internal Subnets settings in System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsInternalSubnets'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Internal Subnets
    put:
      operationId: SettingsInternalSubnets_Update
      summary: Set Internal Subnets settings in System
      description: Update the Internal Subnets settings in System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsInternalSubnetsBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Internal Subnets
  /settings/system/trusted-external:
    get:
      operationId: SettingsTrustedInternetAddress_Get
      summary: Get Trusted Internet addresses settings in System
      description: Get Trusted Internet addresses settings in System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsTrustedInternetAddresses'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
    put:
      operationId: SettingsTrustedInternetAddress_Update
      summary: Set  Trusted Internet addresses settings in System
      description: Set Trusted Internet addresses settings in System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsTrustedInternetAddressesBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
  /users:
    get:
      operationId: Users_List
      summary: List Users
      description: Returns a list of Users.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/export:
    post:
      operationId: Users_Export
      summary: Export users
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  '/users/export/csv/{exportId}':
    get:
      operationId: UsersExport_Get
      summary: Download users export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Users
  /users/filters:
    get:
      operationId: UsersFilters_List
      summary: List Users Filters
      description: Returns a list of filters for Users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/human:
    get:
      operationId: UsersHuman_List
      summary: List Human Users
      description: Returns a list of Human Users.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/human/export:
    post:
      operationId: UsersHuman_Export
      summary: Export human users
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  '/users/human/export/csv/{exportId}':
    get:
      operationId: UsersHumanExport_Get
      summary: Download human users export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Users
  /users/human/filters:
    get:
      operationId: UsersHumanFilters_List
      summary: List Human Users Filters
      description: Returns a list of filters for Human Users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/service-account:
    get:
      operationId: UsersServiceAccount_List
      summary: List ServiceAccount Users
      description: Returns a list of ServiceAccount Users.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/service-account/export:
    post:
      operationId: UsersServiceAccount_Export
      summary: Export ServiceAccount users
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  '/users/service-account/export/csv/{exportId}':
    get:
      operationId: UsersServiceAccountExport_Get
      summary: Download ServiceAccount users export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Users
  /users/service-account/filters:
    get:
      operationId: UsersServiceAccountFilters_List
      summary: List ServiceAccount Users Filters
      description: Returns a list of filters for ServiceAccount Users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/undetermined:
    get:
      operationId: UsersUndetermined_List
      summary: List Undetermined Users
      description: Returns a list of Undetermined Users.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/undetermined/export:
    post:
      operationId: UsersUndetermined_Export
      summary: Export Undetermined users
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  '/users/undetermined/export/csv/{exportId}':
    get:
      operationId: UsersUndeterminedExport_Get
      summary: Download Undetermined users export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Users
  /users/undetermined/filters:
    get:
      operationId: UsersUndeterminedFilters_List
      summary: List Undetermined Users Filters
      description: Returns a list of filters for Undetermined Users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/searchIdByPrincipalName:
    get:
      operationId: UsersByPrincipalName_Search
      tags:
        - Users
      summary: Search user entity id by Principal Name
      description: Provided user SID - returns user entity id
      parameters:
        - $ref: '#/components/parameters/principalNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userIdResponse'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
  /users/searchIdBySid:
    get:
      operationId: UsersBySid_Search
      tags:
        - Users
      summary: Search user entity id by SID
      description: Provided user SID - returns user entity id
      parameters:
        - $ref: '#/components/parameters/sidParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userIdResponse'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
  /users/statistics:
    get:
      operationId: UserStatistics_Get
      summary: User statistics
      description: Get Users statistics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  '/users/{userId}':
    get:
      operationId: User_Get
      summary: Get a user
      description: Returns the properties of an user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  '/users/{userId}/activities/logon':
    get:
      operationId: UsersLogonActivities_List
      summary: List a specific Logon Activities
      description: Returns a list of logon activites for a specific user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logonActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  '/users/{userId}/activities/logon/export':
    post:
      operationId: UsersLogonActivities_Export
      summary: Export logon activities for a specific user
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  '/users/{userId}/activities/logon/export/csv/{exportId}':
    get:
      operationId: UsersLogonActivitiesExport_Get
      summary: Download logon activities for a specific user export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
      security:
        - api_key: []
      tags:
        - Users
  '/users/{userId}/activities/logon/filters':
    get:
      operationId: UsersLogonActivitiesFilters_List
      summary: Get logon activity filters for a specific user
      description: Returns the filters that can be used for logon activities for a specific user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  '/users/{userId}/activities/network':
    get:
      operationId: UsersNetworkActivities_List
      summary: List Network Activities for a specific user
      description: Returns a list of network activites for a specific user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  '/users/{userId}/activities/network/export':
    post:
      operationId: UsersNetworkActivities_Export
      summary: Export network activities for a specific user
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  '/users/{userId}/activities/network/export/csv/{exportId}':
    get:
      operationId: UsersNetworkActivitiesExport_Get
      summary: Download network activities export for a specific user
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
      security:
        - api_key: []
      tags:
        - Users
  '/users/{userId}/activities/network/filters':
    get:
      operationId: UsersNetworkActivitiesFilters_List
      summary: Get network activity filters for a specific user
      description: Returns the filters that can be used for network activities for a specific user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  '/users/{userId}/ancestors':
    get:
      operationId: UserMemberOf_Get
      summary: Get a users ancestors
      description: Returns a list of groups the user is a member of.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ancestors'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  '/users/{userId}/audit':
    get:
      operationId: UserAudit_Get
      summary: Get a users audits
      description: Returns a list of audits for the user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auditList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  '/users/{userId}/audit/export':
    post:
      operationId: UsersAudit_Export
      summary: Export users audits
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  '/users/{userId}/audit/filters':
    get:
      operationId: UsersAuditsFilters_List
      summary: List Audit Filters for a specific user
      description: Returns a list of filters for Audit events for a specific user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Users
  '/users/{userId}/audit/export/csv/{exportId}':
    get:
      operationId: UsersAuditExport_Get
      summary: Download users audit export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
      security:
        - api_key: []
      tags:
        - Users
  '/users/{userId}/managed-assets':
    get:
      operationId: Users-ManagedAssets_List
      summary: Get managed assets
      description: get managed assets for user
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/managedAssetsList'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
    post:
      operationId: Users-ManagedAssets_Add
      summary: Add a managed assets
      description: Add a managed assets for user
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: Array of assets to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/managedAssetsBody'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  '/users/{userId}/managed-assets/{groupOrAssetId}':
    delete:
      operationId: Users-ManagedAssets_Delete
      summary: Remove managed asset
      description: Remove managed asset of user
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/groupOrAssetIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  '/users/{userId}/managed-assets/candidates':
    get:
      operationId: Users-ManagedAssetsCandidates_List
      summary: Get asset candidates
      description: Get asset candidates to be managed by asset managers
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
components:
  parameters:
    addAncestorsParameter:
      name: _add_ancestors
      in: query
      description: show rules where the asset is part of a group
      schema:
        type: boolean
        default: true
    addBuiltinsParameter:
      name: _add_builtins
      in: query
      description: show global rules
      schema:
        type: boolean
        default: false
    analysisDirectionParameter:
      name: direction
      in: query
      description: 'direction for the query, incoming or outgoing'
      required: true
      schema:
        type: string
      example: incoming
    assetIdParameter:
      name: assetId
      in: path
      description: assetId to filter on
      required: true
      schema:
        type: string
        pattern: '^a:[ault]:[a-zA-Z0-9]{8}$'
      example: a:a:8ErCHXe8
    clientIdParameter:
      name: clientId
      in: path
      description: clientId to filter on
      required: true
      schema:
        type: string
    connectionStateParameter:
      name: connectionstate
      in: query
      description: connnection state for the query
      schema:
        type: integer
      example: 1
    connectRegionIdParameter:
      name: regionId
      in: path
      description: connect region id
      required: true
      schema:
        type: string
      example: 'r:a:q0tqD2rf'
    connectServerIdParameter:
      name: connectServerId
      in: path
      description: connect server id
      required: true
      schema:
        type: string
      example: 'y:a:jUDZuhXU'
    cursorParameter:
      name: _cursor
      in: query
      description: cursor position to start at
      schema:
        type: integer
        format: int64
        pattern: '^\d{13}$'
      example: 1647305854366
    directionParameter:
      name: direction
      in: query
      description: 'direction for the query, 1=Inbound, 2=Outbound, 3=Both'
      required: true
      schema:
        type: integer
      example: 1
    domainIdParameter:
      name: domainId
      in: path
      description: The fqdn of the domain
      required: true
      schema:
        type: string
        example: child.zeronetworks.com
    dstAssetId:
      name: dstAssetId
      in: query
      description: Id of dest asset
      required: true
      schema:
        type: string
    dstProcess:
      name: dstProcess
      in: query
      description: Dest process
      schema:
        type: string
    entityIdQueryParameter:
      name: _entityId
      in: query
      description: entityId to filter on
      schema:
        type: string
    entityParams:
      name: entityParams
      in: query
      required: false
      schema:
        type: string
      description: 'JSON string URI encoded object {id: string, direction: AssetDirection}'
    exportIdParameter:
      name: exportId
      in: path
      description: exportId to download
      required: true
      schema:
        type: string
    filtersParameter:
      name: _filters
      in: query
      description: JSON string URI encoded set of fiters
      schema:
        type: string
    forestIdParameter:
      name: forestId
      in: path
      description: The forest id
      required: true
      schema:
        type: string
        example: 'f:a:8199d54b'
    forestIdQueryParameter:
      name: _forestId
      in: query
      description: The forest id
      required: true
      schema:
        type: string
        example: 'f:a:8199d54b'
    fqdnParameter:
      name: fqdn
      in: query
      description: fully qualifed domain name
      schema:
        type: string
      example: server.domain.local
    fromParameter:
      name: from
      in: query
      description: startTime in epoch(ms)
      schema:
        type: integer
        pattern: '^\d{13}$'
      example: 1647308838000
    groupIdParameter:
      name: groupId
      in: path
      description: groupId to filter on
      required: true
      schema:
        type: string
        pattern: '^g:[acsot]:[a-zA-Z0-9]{8}$'
      example: g:t:01445453
    groupIdQueryParameter:
      name: _groupId
      in: query
      description: groupId to filter on
      schema:
        type: string
        pattern: '^g:[acs]:[a-zA-Z0-9]{8}$'
    groupOrAssetIdParameter:
      name: groupOrAssetId
      description: group or asset id to filter on
      in: path
      required: true
      schema:
        type: string
        pattern: '^[ag]:[acdjlngt]:[a-zA-Z0-9]{8}$'
    groupOrUserIdParameter:
      name: groupOrUserId
      description: group or user id to filter on
      in: path
      required: true
      schema:
        type: string
        pattern: '^[gu]:[ac]:[a-zA-Z0-9]{8}$'
    groupTypeParameter:
      name: groupType
      in: path
      description: group type to filter on
      required: true
      schema:
        type: string
        pattern: ^ad$|^custom$|^ot$|^system$|^tag$
    identityProviderIdParameter:
      name: identityProviderId
      in: path
      description: Identity provider Id
      required: true
      schema:
        type: string
        enum:
          - azure
          - custom
          - cyberark
          - duo
          - okta
    includeNestedMembersQueryParameter:
      name: includeNestedMembers
      in: query
      description: include nested members in the result
      required: true
      schema:
        type: boolean
    ipParameter:
      name: ip
      in: query
      description: IP address
      required: true
      schema:
        type: string
        pattern: '[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}'
    ipRangeParameter:
      name: ipRange
      in: query
      description: IP Address Range
      required: true
      schema:
        type: string
        example: 1.1.1.1-1.1.1.2
        pattern: '[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}-[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}'
    ipSubnetParameter:
      name: subnet
      in: query
      description: IP Subnet
      required: true
      schema:
        type: string
        example: 192.168.1.0/24
        pattern: '[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}/[0-9]{1,3}'
    isSrcAssetUnmonitoredParameter:
      name: isSrcAssetUnmonitored
      in: query
      description: filter for unmonitored sources
      required: false
      schema:
        type: boolean
    limitParameter:
      name: _limit
      in: query
      description: Limit the return results
      required: true
      schema:
        type: integer
        default: 30
        maximum: 400
        minimum: 1
    offsetParameter:
      name: _offset
      in: query
      description: Used to page through results
      schema:
        type: integer
        default: 0
        maximum: 1000000000
        minimum: 0
    orderParameter:
      name: order
      in: query
      description: What order to sort the results
      schema:
        type: string
        default: desc
        enum:
          - asc
          - desc
    port:
      name: port
      in: query
      description: port
      required: true
      schema:
        type: integer
    principalNameParameter:
      name: principalName
      in: query
      required: true
      description: sid to query for
      schema:
        type: string
    protectionPolicyIdParameter:
      name: protectionPolicyId
      in: path
      description: The id of the protection policy
      required: true
      schema:
        type: string
        format: uuid
    protocolType:
      name: protocolType
      in: query
      description: protocol type
      required: true
      schema:
        type: integer
    pushIdentityProviderIdParameter:
      name: pushIdentityProviderId
      in: path
      description: Push Identity provider Id
      required: true
      schema:
        type: string
        enum:
          - duo
          - microsoftAuthenticator
    reactivePolicyIdParameter:
      name: reactivePolicyId
      in: path
      description: The id of the MFA policy
      required: true
      schema:
        type: string
        format: uuid
    roleEntityIdParameter:
      name: roleEntityId
      in: path
      description: The id of the user
      required: true
      schema:
        type: string
    ruleDirectionParameter:
      name: ruleDirection
      in: query
      description: 'direction of the rule (1-Inbound, 2-Outbound)'
      required: true
      schema:
        type: integer
        enum:
          - 1
          - 2
    ruleIdParameter:
      name: ruleId
      in: path
      description: The id of the rule
      required: true
      schema:
        type: string
        format: uuid
      example: d37077dc-0660-454d-81a0-f52f491fd5b8
    searchParameter:
      name: _search
      in: query
      description: Test to search for
      schema:
        type: string
    sessionIdParameter:
      name: sessionId
      in: path
      description: The id of the session
      required: true
      schema:
        type: string
        pattern: '^s:a:[a-zA-Z0-9]{8}$'
    sidParameter:
      name: sid
      in: query
      required: true
      description: sid to query for
      schema:
        type: string
    sortParameter:
      name: sort
      in: query
      description: sort for the query
      schema:
        type: string
      example: occurred_desc
    srcAssetId:
      name: srcAssetId
      in: query
      description: Src asset id
      required: true
      schema:
        type: string
    srcProcess:
      name: srcProcess
      in: query
      description: Src process
      schema:
        type: string
    srcUserId:
      name: srcUserId
      in: query
      description: Id of src user
      required: true
      schema:
        type: string
    toParameter:
      name: to
      in: query
      description: endTime in epoch(ms)
      schema:
        type: integer
        pattern: '^\d{13}$'
      example: 1647305854366
    updateIdParameter:
      name: updateId
      in: query
      description: version
      required: true
      schema:
        type: integer
    userAccessConfigParameter:
      name: userAccessConfigId
      in: path
      description: userAccessConfigId to filter on
      required: true
      schema:
        type: string
        pattern: '^v:[a-zA-Z0-9]{8}$'
    userIdParameter:
      name: userId
      in: path
      description: userId to filter on
      required: true
      schema:
        type: string
        pattern: '^u:[a]:[a-zA-Z0-9]{8}$'
      example: u:a:w27loY5p
    withCountParameter:
      name: with_count
      in: query
      description: return count of objects
      schema:
        type: boolean
        default: false
  schemas:
    activitiesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/activity'
        scrollCursor:
          type: string
    activity:
      type: object
      properties:
        dst:
          type: object
          properties:
            assetId:
              type: string
            assetProtectionState:
              type: integer
            assetSrc:
              type: integer
            assetType:
              type: integer
            eventRecordId:
              type: integer
            fqdn:
              type: string
            ip:
              type: string
            port:
              type: integer
            processId:
              type: string
            processName:
              type: string
            processPath:
              type: string
            userId:
              type: string
            userName:
              type: string
            inboundRuleMatches:
              type: array
              items:
                $ref: '#/components/schemas/ruleMatch'
            outboundRuleMatches:
              type: array
              items:
                $ref: '#/components/schemas/ruleMatch'
        protocol:
          type: integer
        src:
          type: object
          properties:
            assetId:
              type: string
            assetProtectionState:
              type: integer
            assetSrc:
              type: integer
            assetType:
              type: integer
            eventRecordId:
              type: integer
            fqdn:
              type: string
            ip:
              type: string
            port:
              type: integer
            processId:
              type: string
            processName:
              type: string
            processPath:
              type: string
            userId:
              type: string
            userName:
              type: string
        state:
          type: integer
        timestamp:
          $ref: '#/components/schemas/epochMillis'
        trafficType:
          type: integer
    accessToken:
      description: Access Token
      type: object
      properties:
        clientId:
          type: string
        accessType:
          $ref: '#/components/schemas/accessTypeEnum'
        name:
          type: string
        expiry:
          type: string
        issuedAt:
          type: string
        createdAt:
          type: string
        token:
          type: string
      x-examples:
        example-1:
          clientId: 'm:195d7d50e8c0c2864c985e72de1a2fdef7dfdc6e'
          accessType: 2
          name: example
          expiry: '2024-06-27T08:38:17.000Z'
          issuedAt: '2022-06-27T08:38:17.000Z'
          createdAt: '2022-06-27T08:21:21.000Z'
          token: eyJhbGciOiJSUzI1NiIsIna5cCI6IkpXVCJ9.eyJzdWIiOiJtOjY5NWQ3ZDUwZThjMGMyODY0Yzk4NWU3MmRlMWEyZmRlZjdkZmRjNmUiLCJuYW1lIjoiYXNkIiwiZWlkIjoiMTc2MjRhNTctNzI5ZS00ODA1LTk3MDMtNjc5NDdkM2RiMDFlIiwic2NvcGUiOjUsImVfbmFtZSI6ImxhYjgiLCJ2IjoxLCJpYXQiOjE2NTYzMTkwOTcsImV4cCI6MTcxOTQ3NzQ5NywiYXVkIjoicG9ydGFsLWxhYjguemVyb25ldHdvcmtzLmNvbSIsImlzcyI6Inplcm9uZXR3b3Jrcy5jb20vYXBpL3YxL2FjY2Vzcy10b2tlbiJ9.S0P3tyeU7BOPd0P27GKyFeWidoFSKEMiKhHbRLikyy4_34FafcpykiLO1vKBH6iB0utnEO4BwohlWeRWCi6LWkm5R2GxSLVo9GEuuTLPfqUkMzwpMpUkc-MniERH508z7LsxKrPA9VGCmMDKUh87PasooHfWaPgYtWTygV_uAtu1ppIde4V86WsqEmvbZt2gNGBLxwLgIgUgGuOExHu5MOM9fttiNKtuceJxP-RXFAFluXlfJwmjeY-WWHTU6AdvhB0HeJKAA7Pb8A60OkYxQsLxZKLS0K9WKFekYflh-nZBOQRfU3aUygmRyxtknvE0yZ7aK290y2Vb-lnqtl3k5Q
    accessTokenInfo:
      type: object
      properties:
        clientId:
          type: string
          readOnly: true
        name:
          type: string
        expiry:
          type: string
        issuedAt:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        accessType:
          $ref: '#/components/schemas/accessTypeEnum'
      title: ''
      x-examples:
        example-1:
          clientId: 'm:81a8735b5fed82c9c497163477c98fd835b58f83'
          accessType: 3
          name: access token - cloud connector provisioning
          expiry: '2022-07-26T15:49:49.000Z'
          issuedAt: '2022-06-26T15:49:49.000Z'
          createdAt: '2022-06-26T12:12:56.000Z'
        example-2:
          clientId: string
          accessType: 1
          name: string
          expiry: string
          issuedAt: string
          createdAt: string
    accessTypeEnum:
      description: '1=Full Access, 2=Read Only, 3=Cloud Connector Provisioning'
      type: integer
      enum:
        - 1
        - 2
        - 3
      title: accessTypeEnum
    aiExclusionSourceEntitiesBody:
      type: array
      items:
        type: string
      example:
        - assetid1
        - assetid2
    aiExclusionInfo:
      type: object
      properties:
        tcpPorts:
          type: string
        udpPorts:
          type: string
        icmp:
          type: boolean
        processesList:
          type: array
          items:
            type: string
      x-examples:
        example-1:
          tcpPorts: '100-400,520'
          udpPorts: ''
          icmp: true
          processesList:
            - 'C:\Windows\System32\svchost.exe'
            - 'C:\Windows\System32\svchost.exe (W32Time)'
        example-2:
          tcpPorts: '123'
          udpPorts: '10-30,50-100,150,200'
          icmp: false
          processesList: []
    ancestors:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/group'
    asset:
      type: object
      properties:
        assetType:
          description: |
            Possible asset status:
              * `1` - UNKNOWN 
              * `2` - CLIENT 
              * `3` - SERVER 
              * `4` - CLUSTER 
              * `5` - CAMERA 
              * `6` - TV
              * `7` - FACTORY_CONTROLLER 
              * `8` - MEDICAL_DEVICE
              * `9` - PRINTER 
              * `10` - SCANNER 
              * `11` - SMART_CARD_READER 
              * `12` - ROUTER 
              * `13` - HYPERVISOR 
              * `14` - PLC 
              * `15` - HMI 
              * `16` - SWITCH 
              * `17` - TERMINAL_STATION 
              * `18` - RTU 
              * `19` - WIRELESS_ACCESS_POINT 
              * `20` - HISTORIAN 
              * `21` - GAME_CONSOLE 
              * `22` - FIRE_ALARM 
              * `23` - UPS 
              * `24` - STORAGE_APPLIANCE 
              * `25` - VIRTUALIZATION_APPLIANCE 
              * `26` - FIREWALL_APPLIANCE 
              * `27` - SECURITY_SCANNER 
              * `28` - SECURITY_CONTROLLER 
              * `29` - DOOR_LOCK 
              * `30` - BIOMETRIC_ENTRY_SYSTEM 
              * `31` - HVAC 
              * `1000` - ROOM_SCHEDULER
          type: integer
          format: int32
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 29
            - 30
            - 31
            - 1000
        distinguishedName:
          type: string
        domain:
          type: string
          example: domain.local
        fqdn:
          type: string
          example: laptoppc.domain.local
        guid:
          type: string
        id:
          type: string
          example: 'a:a:6d020055'
        ipV4Addresses:
          type: array
          items:
            type: string
            example: 1.1.1.1
        ipV6Addresses:
          type: array
          items:
            type: string
        assetStatus:
          description: |
            Possible asset status:
              * `1` - UNDISCOVERED
              * `2` - STALKED
              * `3` - DELETED
              * `4` - OS_UNSUPPORTED
              * `5` - TYPE_UNSUPPORTED
              * `6` - IGNORED
              * `7` - CLOUD_CONNECTOR
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
        name:
          type: string
          example: laptoppc
        operatingSystem:
          type: string
          example: Windows 10 Pro
        protectionState:
          $ref: "#/components/schemas/protectionState"
        source:
          description: |
            Possible asset sources:
              * `0` - UNSPECIFIED
              * `1` - PORTAL 
              * `2` - SSP 
              * `3` - AD 
              * `4` - CUSTOM
              * `5` - SYSTEM
              * `6` - ANSIBLE
              * `7` - OT
              * `8` - WORKGROUP
              * `9` - AZURE_AD 
              * `10` - AZURE 
              * `11` - AWS 
              * `12` - GCP
              * `13` - TAG 
              * `14` - JAMF 
              * `15` - LINUX 
              * `16` - IBM 
              * `17` - ORACLE 
              * `18` - VMWARE 
              * `19` - ALIBABA 
              * `20` - LUMEN 
              * `21` - OVH
          type: integer
          format: int32
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
        state:
          $ref: '#/components/schemas/state'
    assetAnalysis:
      type: object
      properties:
        items:
          type: object
          properties:
            counts:
              type: object
              properties:
                byProcess:
                  type: integer
                byUser:
                  type: integer
                byPort:
                  type: integer
                byAsset:
                  type: integer
            byAsset:
              type: array
              items:
                $ref: '#/components/schemas/byAsset'
            byUser:
              type: array
              items:
                $ref: '#/components/schemas/byUser'
            byProcess:
              type: array
              items:
                $ref: '#/components/schemas/byProcess'
            byPort:
              type: array
              items:
                $ref: '#/components/schemas/byPort'
            connectionState:
              type: integer
    assetBasicInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        assetType:
          type: integer
        protectionState:
          $ref: "#/components/schemas/protectionState"
        domain:
          type: string
      x-examples:
        example-1:
          id: 'a:a:lELFlL34'
          name: TALM-DC-LAB11
          assetType: 2
          protectionState: 5
          domain: dev.zn.com
    assetBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
      required:
        - items
    assetCandidate:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        assetType:
          type: integer
        protectionState:
          $ref: "#/components/schemas/protectionState"
        domain:
          type: string
    assetCandidateList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/assetCandidate'
        scrollCursor:
          type: string
    assetOt:
      type: object
      properties:
        assetType:
          type: integer
          format: int32
        domain:
          type: string
          example: domain.local
        fqdn:
          type: string
          example: laptoppc.domain.local
        id:
          type: string
          example: 'a:a:6d020055'
        ipV4Addresses:
          type: array
          items:
            type: string
            example: 1.1.1.1
        ipV6Addresses:
          type: array
          items:
            type: string
        assetStatus:
          description: |
            Possible asset status:
              * `1` - UNDISCOVERED
              * `2` - STALKED
              * `3` - DELETED
              * `4` - OS_UNSUPPORTED
              * `5` - TYPE_UNSUPPORTED
              * `6` - IGNORED
              * `7` - CLOUD_CONNECTOR
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
        name:
          type: string
          example: router
        operatingSystem:
          type: string
        protectionState:
          $ref: "#/components/schemas/protectionState"
        source:
          type: integer
          format: int32
    assetFilter:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    assetId:
      type: object
      properties:
        assetId:
          type: string
    assetIds:
      type: array
      items:
        $ref: '#/components/schemas/assetId'
    assetList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/asset'
        count:
          type: integer
    assetManager:
      type: object
      properties:
        amountManagedEntities:
          type: integer
          format: int32
        managerInfo:
          type: object
          anyOf:
            - $ref: '#/components/schemas/user'
            - $ref: '#/components/schemas/group'
        managerId:
          type: string
    assetManagersBody:
      type: object
      required:
        - managerIds
      properties:
        managerIds:
          description: managers id
          type: array
          items:
            type: string
            pattern: '^[ug]:[ac]:[a-zA-Z0-9]{8}$'
          example:
            - 'g:c:ab124as2'
            - 'u:a:ab124as2'
    assetManagersList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/assetManager'
    assetOtList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/assetOt'
    assetOtResponse:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/assetOt'
    assetResponse:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/asset'
    assetsFiltersList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/assetFilter'
    assetsOrGroupsList:
      type: object
      properties:
        items:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/asset'
              - $ref: '#/components/schemas/group'
    assetsStatesStatistics:
      type: object
      properties:
        assetsStatesStatistics:
          type: object
          properties:
            connectedAssetsCount:
              type: integer
      x-examples:
        example-1:
          assetsStatesStatistics:
            connectedAssetsCount: 13
    assetsStatistics:
      type: object
      properties:
        item:
          type: object
          properties:
            totalCount:
              type: integer
            deletedCount:
              type: integer
            protectedCount:
              type: integer
            queuedCount:
              type: integer
            monitoredCount:
              type: integer
            protectedDueToProtectionPolicyCount:
              type: integer
            queuedDueToProtectionPolicyCount:
              type: integer
            forcedUnprotectedCount:
              type: integer
            removingProtectionCount:
              type: integer
            forceRemovingProtectionCount:
              type: integer
            addingProtectionCount:
              type: integer
            forceAddingProtectionCount:
              type: integer
            notProtectedLink:
              type: array
              items:
                $ref: '#/components/schemas/requestedFilter'
      x-examples:
        example-1:
          item:
            totalCount: 82
            deletedCount: 2
            protectedCount: 31
            queuedCount: 2
            monitoredCount: 37
            protectedDueToProtectionPolicyCount: 0
            queuedDueToProtectionPolicyCount: 0
            forcedUnprotectedCount: 0
            removingProtectionCount: 1
            forceRemovingProtectionCount: 0
            addingProtectionCount: 3
            forceAddingProtectionCount: 6
            notProtectedLink:
              - id: protectionStatus
                includeValues:
                  - '1'
                  - '6'
              - id: status
                excludeValues:
                  - '3'
    assetSummary:
      type: object
      properties:
        count:
          type: integer
        id:
          type: string
        name:
          type: string
    audienceType:
      description: |
        dictionary:
          * `0` PORTAL_AUDIENCE 
          * `1` SSP_AUDIENCE
          * `2` RP_AUDIENCE
      type: integer
      enum:
        - 0
        - 1
        - 2
    audit:
      type: object
      properties:
        auditType:
          type: integer
          format: int32
        destinationEntitiesList:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        details:
          type: string
        enforcementSource:
          $ref: '#/components/schemas/enforcementSource'
        performedBy:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
              example: User Name
        reportedObjectId:
          type: string
        timestamp:
          $ref: '#/components/schemas/epochMillis'
        userRole:
          description: '1=Admin, 2=Viewer, 3=Regular, 4=API-FullAccess, 5=API-ReadOnly, 6=SelfService, 7=CloudConnectorProvisioning'
          type: integer
          format: int32
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
    auditList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/audit'
        scrollCursor:
          type: string
    byAsset:
      type: object
      properties:
        occurred:
          type: integer
        lastTimeSeen:
          type: string
        aggregation:
          type: object
          properties:
            count:
              type: integer
            id:
              type: string
            name:
              type: string
        ports:
          type: array
          items:
            $ref: '#/components/schemas/portSummary'
        users:
          type: array
          items:
            $ref: '#/components/schemas/userSummary'
        processes:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'
        assets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        connectionState:
          type: integer
    byProcess:
      type: object
      properties:
        occurred:
          type: integer
        lastTimeSeen:
          type: string
        aggregation:
          type: object
          properties:
            count:
              type: integer
            name:
              type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        ports:
          type: array
          items:
            $ref: '#/components/schemas/portSummary'
        users:
          type: array
          items:
            $ref: '#/components/schemas/userSummary'
        processes:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'
        connectionState:
          type: integer
    byPort:
      type: object
      properties:
        occurred:
          type: integer
        lastTimeSeen:
          type: string
        aggregation:
          type: object
          properties:
            count:
              type: integer
            port:
              type: object
              properties:
                protocol:
                  type: integer
                port:
                  type: integer
        assets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        users:
          type: array
          items:
            $ref: '#/components/schemas/userSummary'
        processes:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'
        ports:
          type: array
          items:
            $ref: '#/components/schemas/portSummary'
        connectionState:
          type: integer
    byUser:
      type: object
      properties:
        occurred:
          type: integer
        lastTimeSeen:
          type: string
        aggregation:
          type: object
          properties:
            count:
              type: integer
            id:
              type: string
            name:
              type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        ports:
          type: array
          items:
            $ref: '#/components/schemas/portSummary'
        processes:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'
        users:
          type: array
          items:
            $ref: '#/components/schemas/userSummary'
        connectionState:
          type: integer
    candidate:
      type: object
      properties:
        domain:
          type: string
        hasProtectionPolicy:
          type: boolean
        id:
          type: string
        name:
          type: string
    candidatesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/candidate'
        scrollCursor:
          type: string
    challengeBody:
      type: object
      properties:
        email:
          type: string
        challengeMediumType:
          $ref: '#/components/schemas/ChallengeMediumType'
        sendSkip:
          type: boolean
    ChallengeMediumType:
      type: string
      enum:
        - email
        - phone
    challengeResponse:
      type: object
      properties:
        authenticatedVia:
          type: string
        isPhoneChallengeSupported:
          type: boolean
    connectivityStateAfterReboot:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
      description: |
        dictionary:
          * `1` Previous connectivity state 
          * `2` Connected (Always-on)
          * `3` Disconnected
          * `4` Signed out
    connectRegion:
      type: object
      properties:
        connectServers:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        createdBy:
          type: string
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        dnsServersIpAddressList:
          type: array
          items:
            type: string
        id:
          type: string
        ipAddress:
          type: string
          format: ipv4
        name:
          type: string
        updatedBy:
          type: string
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
    connectRegionBody:
      type: object
      properties:
        name:
          type: string
        ipAddress:
          type: string
          format: ipv4
        dnsServersIpAddressList:
          type: array
          items:
            type: string
            format: ipv4
        dnsSuffixesList:
          type: array
          items:
            type: string
      required:
        - name
        - ipAddress
        - dnsServersIpAddressList
    connectRegionsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/connectRegion'
    connectServer:
      type: object
      properties:
        assemblyVersion:
          type: string
        clientsDnsServerIPs:
          type: array
          items:
            type: string
        connectionState:
          type: integer
        externalIPAddress:
          type: string
          format: ipv4
        fqdn:
          type: string
        id:
          type: string
        installedAt:
          $ref: '#/components/schemas/epochMillis'
        internalIPAddress:
          type: string
          format: ipv4
        name:
          type: string
        port:
          type: integer
        region:
          $ref: '#/components/schemas/idNamePair'
        subnet:
          $ref: '#/components/schemas/idNamePair'
    connectServerBody:
      type: object
      properties:
        publicPort:
          type: string
      required:
        - publicPort
    connectServersList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/connectServer'
    connectUserAccessConfigBody:
      type: object
      required:
        - allowedRegions
        - connectivityStateAfterReboot
        - dstEntityIdsList
        - forceSsoAuthentication
        - loginAuthorizedEntities
        - name
        - sessionTtlHours
      properties:
        allowedRegions:
          type: array
          items:
            type: string
        connectivityStateAfterReboot:
          $ref: '#/components/schemas/connectivityStateAfterReboot'
        description:
          type: string
        dstEntityIdsList:
          type: array
          items:
            type: string
        loginAuthorizedEntities:
          type: object
          required:
            - allowedAssetIdsList
            - allowedAssetsSourcesList
            - allowedUsersIdsList
          properties:
            allowedAssetIdsList:
              type: array
              items:
                type: string
            allowedAssetsSourcesList:
              type: array
              items:
                type: string
            allowedUsersIdsList:
              type: array
              items:
                type: string
            excludedAssetIdsList:
              type: array
              items:
                type: string
            excludedUserIdsList:
              type: array
              items:
                type: string
        forceSsoAuthentication:
          type: boolean
        name:
          type: string
        sessionTtlHours:
          type: integer
    connectUserAccessConfigList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/connectUserAccessConfig'
    connectUserAccessConfig:
      type: object
      properties:
        allowedAssetIds:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        allowedAssetSources:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        allowedDestinations:
          type: array
          items:
            type: object
            properties:
              guid:
                type: string
              id:
                type: string
              name:
                type: string
              domain:
                type: string
              hasProtectionPolicy:
                type: boolean
        allowedRegions:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        allowedUserIds:
          type: array
          items:
            $ref: '#/components/schemas/userSimple'
        connectivityStateAfterReboot:
          type: integer
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/userSimple'
        description:
          type: string
        excludedAssetIds:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        excludedUserIds:
          type: array
          items:
            $ref: '#/components/schemas/userSimple'
        forceSsoAuthentication:
          type: boolean
        id:
          type: string
        name:
          type: string
        sessionTtlHours:
          type: integer
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          $ref: '#/components/schemas/userSimple'
    createdBy:
      type: object
      properties:
        createdBy:
          $ref: '#/components/schemas/idNamePair'
        enforcementSource:
          $ref: '#/components/schemas/enforcementSource'
        userRole:
          type: integer
          format: int32
    createOtAssetResponse:
      type: object
      properties:
        assetId:
          type: string
    customGroupBody:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        membersId:
          description: members id
          type: array
          items:
            type: string
            pattern: '^g:[c]:[a-zA-Z0-9]{8}$'
          example:
            - 'g:c:ab124as2'
      required:
        - name
    customGroupMembersBody:
      type: object
      properties:
        membersId:
          description: members id
          type: array
          items:
            type: string
            pattern: '^g:[c]:[a-zA-Z0-9]{8}$'
          example:
            - 'g:c:ab124as2'
      required:
        - membersId
    customGroupResponse:
      type: object
      properties:
        groupId:
          type: string
    deployment:
      type: object
      properties:
        assetId:
          type: string
        id:
          type: string
        ipAddress:
          type: string
        defaultGateway:
          type: string
        dnsIPAddress:
          type: string
        name:
          type: string
        subnetMask:
          type: string
        status:
          type: integer
        state:
          type: integer
    deploymentsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/deployment'
    distribution:
      type: object
      properties:
        timestamp:
          $ref: '#/components/schemas/epochMillis'
        activitiesCount:
          type: integer
    emptyResponse:
      type: object
    encodedEntity:
      type: object
      properties:
        id:
          type: string
    enforcementSource:
      description: '1=ReacticePolicy, 2=Automated, 3=AccessPortal, 4=AdminPortal, 5=AI, 6=API, 7=Setup'
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
    entitiesList:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/entity'
        count:
          type: integer
    entity:
      type: object
      anyOf:
        - $ref: '#/components/schemas/group'
        - $ref: '#/components/schemas/user'
        - $ref: '#/components/schemas/asset'
    epochMillis:
      description: Epoch Millis
      type: integer
      format: int64
      title: epochMillis
    error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
    exportBody:
      type: object
      properties:
        from:
          type: integer
        to:
          type: integer
        _search:
          type: string
        _filters:
          type: string
        localDateTimeFormat:
          type: string
          default: en-US
    exportBodyActivities:
      type: object
      properties:
        from:
          type: integer
        to:
          type: integer
        _search:
          type: string
        _filters:
          type: string
        localDateTimeFormat:
          type: string
          default: en-US
      required:
        - localDatetimeFormat
        - _filters
        - _search
    exportBodyAnalysis:
      type: object
      properties:
        from:
          type: integer
        to:
          type: integer
        _filters:
          type: string
          default: '{"groupBy":"byPort","direction":"incoming","connection":3}'
        localDateTimeFormat:
          type: string
          default: en-US
      required:
        - localDatetimeFormat
        - _filters
        - from
    exportBodyAssets:
      type: object
      properties:
        _filters:
          type: string
          default: '{"groupBy":"byPort","direction":"incoming","connection":3}'
        localDateTimeFormat:
          type: string
          default: en-US
      required:
        - localDatetimeFormat
        - _filters
    exportBodyRules:
      type: object
      properties:
        addAncestors:
          type: boolean
          default: true
        addBuiltins:
          type: boolean
          default: false
        assetDirection:
          description: '1 for inbound, 2 for outbound'
          type: integer
        _filters:
          type: string
        localDateTimeFormat:
          type: string
          default: en-US
      required:
        - addAncestors
        - addBuiltins
        - localDateTimeFormat
        - _filters
    exportId:
      type: object
      properties:
        exportId:
          type: string
    externalIpsList:
      description: Collection of Internet IPs that are trusted
      type: array
      items:
        type: string
        example: 192.168.0.0
    filter:
      type: object
      properties:
        id:
          type: string
        type:
          type: integer
        name:
          type: string
        placeholder:
          type: string
        disableExcludeSupport:
          type: boolean
        enableBulkSelection:
          type: boolean
        allowedCharactersRegex:
          type: string
        selections:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
    filtersList:
      type: object
      properties:
        defaultSelectedFilterId:
          type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/filter'
        resolvedFilters:
          type: object
        hasActiveFiltersChanged:
          type: boolean
    group:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        description:
          type: string
        directMembersCount:
          type: integer
        domain:
          type: string
        guid:
          type: string
        hasProtectionPolicy:
          type: boolean
        id:
          type: string
        name:
          type: string
        role:
          type: integer
          format: int32
        sid:
          type: string
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
    groupCandidate:
      type: object
      properties:
        domain:
          type: string
        hasProtectionPolicy:
          type: boolean
        id:
          type: string
        name:
          type: string
    groupCandidatesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/groupCandidate'
        scrollCursor:
          type: string
    groupIdOrAssetId:
      type: string
      pattern: '^[ag]:[acdjlngt]:[a-zA-Z0-9]{8}$'
    groupIdOrUserId:
      type: string
      pattern: '^[gu]:[ac]:[a-zA-Z0-9]{8}$'
    groupResponse:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/group'
    groupsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/group'
    groupsOrUsersList:
      type: object
      properties:
        items:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/group'
              - $ref: '#/components/schemas/user'
    groupsStatistics:
      type: object
      properties:
        groupStatistics:
          type: object
          properties:
            adGroupsCount:
              type: integer
            customGroupsCount:
              type: integer
            protectionPoliciesCount:
              type: integer
      x-examples:
        example-1:
          groupStatistics:
            adGroupsCount: 106
            customGroupsCount: 1
            protectionPoliciesCount: 2
    historyRule:
      type: object
      properties:
        id:
          type: string
        portsList:
          $ref: '#/components/schemas/portsList'
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        description:
          type: string
        remoteEntityInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        localEntityInfo:
          $ref: '#/components/schemas/idNamePair'
        localProcessesList:
          type: array
          items:
            type: string
        createdBy:
          type: object
          properties:
            createdBy:
              $ref: '#/components/schemas/idNamePair'
            enforcementSource:
              $ref: '#/components/schemas/enforcementSource'
    idNamePair:
      type: object
      properties:
        id:
          description: EntityId
          type: string
        name:
          description: Entity Name
          type: string
    ipSubnet:
      type: string
      example: 192.168.1.0/24
      pattern: '[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}/[0-9]{1,3}'
    iso8601DateTimeUTC:
      description: ISO 8601 Date Time in UTC
      type: string
      example: 'YYYY-HH-DDTHH:MM:SSSZ'
    linuxBody:
      type: object
      properties:
        displayName:
          type: string
          example: linuxserver
        fqdn:
          type: string
          example: linuxserver.domain.local
      required:
        - displayName
        - fqdn
    listeningAddress:
      type: object
      properties:
        ipAddress:
          type: string
        tcpPorts:
          type: string
        udpPorts:
          type: string
    listeningPort:
      type: object
      properties:
        processName:
          type: string
        processId:
          type: integer
        username:
          type: string
        listeningAddressList:
          type: array
          items:
            $ref: '#/components/schemas/listeningAddress'
    listeningPortsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/listeningPort'
    loginBody:
      type: object
      properties:
        challengeMediumType:
          $ref: '#/components/schemas/ChallengeMediumType'
        email:
          type: string
        otp:
          type: string
    loginResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        token:
          type: string
    managedAssetsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/managedAsset'
    manager:
      type: object
      properties:
        manager:
          type: object
          anyOf:
            - $ref: '#/components/schemas/user'
            - $ref: '#/components/schemas/group'
        managerId:
          type: string
        relation:
          type: integer
          format: int32
    managersList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/manager'
    logonActivitiesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/logonActivity'
        scrollCursor:
          type: string
    logonActivity:
      type: object
      properties:
        src:
          type: object
          properties:
            assetId:
              type: string
            assetProtectionState:
              type: integer
            assetSrc:
              type: integer
            assetType:
              type: integer
            fqdn:
              type: string
            ip:
              type: string
            port:
              type: integer
        dst:
          type: object
          properties:
            assetId:
              type: string
            assetProtectionState:
              type: integer
            assetSrc:
              type: integer
            assetType:
              type: integer
            fqdn:
              type: string
        eventType:
          type: integer
        logonType:
          type: integer
        processName:
          type: string
        processId:
          type: string
        authenticationPackageName:
          type: string
        logonProvider:
          type: string
        subjectUserName:
          type: string
        subjectUserSid:
          type: string
        targetUserName:
          type: string
        targetUserSid:
          type: string
        targetLogonId:
          type: integer
          format: int64
        timestamp:
          $ref: '#/components/schemas/epochMillis'
        recordId:
          type: integer
          format: int64
        impersonationLevel:
          type: integer
    managedAsset:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/asset'
        entityId:
          type: string
        relation:
          type: integer
          format: int32
    managedAssetsBody:
      type: object
      properties:
        entityIds:
          description: managed asset ids
          type: array
          items:
            type: string
            pattern: '^[ag]:[acdjlngt]:[a-zA-Z0-9]{8}$'
          example:
            - 'g:c:ab124as2'
            - 'a:a:ab124as2'
    profileEnv:
      type: object
      properties:
        isTrial:
          type: boolean
          example: false
    profileResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/profileUser'
        env:
          $ref: '#/components/schemas/profileEnv'
    profileUser:
      type: object
      properties:
        id:
          type: string
          example: 1f352ed0-86f1-454f-90a5-592c197c8000
        fullName:
          type: string
          example: Zero Networks
        activeEnvironmentId:
          type: string
          example: 17624a57-729e-4805-9703-67947d3bd888
        activeEnvironmentName:
          type: string
          example: office-windows
        role:
          $ref: '#/components/schemas/role'
        platformType:
          type: integer
          example: 5
        email:
          type: string
          example: team@zeronetworks.com
        tenantId:
          type: string
          example: 3d3b45ba-4b3c-4746-b4f5-be5d83abe001
        phone:
          type: string
          example: '+14242997613'
        type:
          $ref: '#/components/schemas/audienceType'
        isExperimental:
          type: boolean
          example: true
        isInternalUser:
          type: boolean
          example: false
    queueAssetBody:
      type: object
      properties:
        queueDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
      required:
        - queueDays
    queueAssetExtendBody:
      type: object
      properties:
        extendByDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
        relearnReason:
          type: string
      required:
        - extendByDays
    reactivePoliciesStatistics:
      type: object
      properties:
        reactivePoliciesStatistics:
          type: object
          properties:
            totalCount:
              type: integer
    reactivePolicy:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          type: string
        createdByName:
          type: string
          example: User Name
        description:
          type: string
        dstEntityInfo:
          $ref: '#/components/schemas/asset'
        dstPort:
          type: string
          example: '3389'
        dstProcessNames:
          type: array
          items:
            type: string
            example: 'c:\test.exe'
        enforcementSource:
          $ref: '#/components/schemas/enforcementSource'
        excludedSrcEntityInfos:
          type: array
          items:
            type: string
        excludedSrcProcesses:
          type: array
          items:
            type: string
        fallbackToLoggedOnUser:
          type: boolean
        id:
          type: string
          example: 00000000-0000-0000-0000-000000000000
        mfaMethods:
          type: array
          items:
            type: integer
            description: '1=SMS, 2=Email, 3=Browser, 4=Duo'
            format: int32
            enum:
              - 1
              - 2
              - 3
              - 4
        overrideBuiltins:
          type: boolean
        protocolType:
          description: '6=TCP, 17=UDP'
          type: integer
          format: int32
          enum:
            - 6
            - 17
        ruleDuration:
          type: integer
          format: int32
        srcEntityInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        srcProcessNames:
          type: array
          items:
            type: string
            example: system
        srcUserInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        state:
          description: '1=Enabled, 2=Disabled'
          type: integer
          format: int32
          enum:
            - 1
            - 2
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        additionalPortsList:
          $ref: '#/components/schemas/portsList'
    reactivePolicyDistribution:
      type: object
      properties:
        mfaDistribution:
          type: array
          items:
            type: object
            properties:
              timestamp:
                $ref: '#/components/schemas/epochMillis'
              approved:
                type: integer
              rejected:
                type: integer
      x-examples:
        example-1:
          mfaDistribution:
            - timestamp: 1654905600000
              approved: 0
              rejected: 0
            - timestamp: 1654992000000
              approved: 5
              rejected: 0
            - timestamp: 1655078400000
              approved: 7
              rejected: 0
            - timestamp: 1655164800000
              approved: 13
              rejected: 0
            - timestamp: 1655251200000
              approved: 7
              rejected: 0
            - timestamp: 1655337600000
              approved: 2
              rejected: 0
            - timestamp: 1655424000000
              approved: 6
              rejected: 0
            - timestamp: 1655510400000
              approved: 0
              rejected: 0
            - timestamp: 1655596800000
              approved: 1
              rejected: 0
            - timestamp: 1655683200000
              approved: 7
              rejected: 0
            - timestamp: 1655769600000
              approved: 3
              rejected: 0
            - timestamp: 1655856000000
              approved: 7
              rejected: 0
            - timestamp: 1655942400000
              approved: 4
              rejected: 0
            - timestamp: 1656028800000
              approved: 4
              rejected: 0
            - timestamp: 1656115200000
              approved: 0
              rejected: 0
            - timestamp: 1656201600000
              approved: 2
              rejected: 0
            - timestamp: 1656288000000
              approved: 4
              rejected: 0
            - timestamp: 1656374400000
              approved: 8
              rejected: 0
            - timestamp: 1656460800000
              approved: 7
              rejected: 0
            - timestamp: 1656547200000
              approved: 9
              rejected: 0
            - timestamp: 1656633600000
              approved: 3
              rejected: 0
            - timestamp: 1656720000000
              approved: 0
              rejected: 0
            - timestamp: 1656806400000
              approved: 4
              rejected: 1
            - timestamp: 1656892800000
              approved: 2
              rejected: 0
            - timestamp: 1656979200000
              approved: 3
              rejected: 0
            - timestamp: 1657065600000
              approved: 16
              rejected: 2
            - timestamp: 1657152000000
              approved: 17
              rejected: 0
            - timestamp: 1657238400000
              approved: 13
              rejected: 0
            - timestamp: 1657324800000
              approved: 0
              rejected: 0
            - timestamp: 1657411200000
              approved: 3
              rejected: 0
            - timestamp: 1657497600000
              approved: 4
              rejected: 0
    reactivePolicyInboundBody:
      type: object
      properties:
        description:
          type: string
        dstEntityInfo:
          type: object
          properties:
            id:
              type: string
          required:
            - id
        dstPort:
          type: string
        dstProcessNames:
          type: array
          items:
            type: string
        excludedSrcEntityInfos:
          type: array
          items:
            type: string
        excludedSrcProcesses:
          type: array
          items:
            type: string
        fallbackToLoggedOnUser:
          type: boolean
        mfaMethods:
          type: array
          items:
            type: integer
        overrideBuiltins:
          type: boolean
        protocolType:
          type: integer
        ruleDuration:
          type: integer
        srcEntityInfos:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              id:
                type: string
        srcProcessNames:
          type: array
          items:
            type: string
        srcUserInfos:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              id:
                type: string
        state:
          description: '1=Enabled, 2=Disabled'
          type: integer
          enum:
            - 1
            - 2
        additionalPortsList:
          $ref: '#/components/schemas/portsList'
      required:
        - dstEntityInfo
        - dstPort
        - dstProcessNames
        - fallbackToLoggedOnUser
        - mfaMethods
        - overrideBuiltins
        - protocolType
        - ruleDuration
        - srcEntityInfos
        - srcProcessNames
        - srcUserInfos
        - ruleCreationMode
        - state
        - additionalPortsList
    reactivePolicyItem:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/reactivePolicy'
    reactivePolicyList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/reactivePolicy'
    reactivePolicyMethods:
      type: object
      properties:
        items:
          type: array
          items:
            type: integer
    reactivePolicyOutboundBody:
      type: object
      properties:
        description:
          type: string
        dstEntityInfo:
          type: object
          properties:
            id:
              type: string
          required:
            - id
        dstPort:
          type: string
        dstProcessNames:
          type: array
          items:
            type: string
        excludedSrcEntityInfos:
          type: array
          items:
            type: string
        excludedSrcProcesses:
          type: array
          items:
            type: string
        fallbackToLoggedOnUser:
          type: boolean
        mfaMethods:
          type: array
          items:
            type: integer
        overrideBuiltins:
          type: boolean
        protocolType:
          type: integer
        ruleDuration:
          type: integer
        srcEntityInfos:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              id:
                type: string
        srcProcessNames:
          type: array
          items:
            type: string
        srcUserInfos:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              id:
                type: string
        state:
          description: '1=Enabled, 2=Disabled'
          type: integer
          enum:
            - 1
            - 2
        additionalPortsList:
          $ref: '#/components/schemas/portsList'
      required:
        - dstEntityInfo
        - dstPort
        - fallbackToLoggedOnUser
        - mfaMethods
        - overrideBuiltins
        - protocolType
        - ruleDuration
        - srcEntityInfos
        - srcProcessNames
        - srcUserInfos
        - state
        - additionalPortsList
    reactivePolicyResponse:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/reactivePolicy'
    nextBatch:
      type: object
      properties:
        nextBatchTime:
          type: integer
          format: int64
    orderedReactivePoliciesList:
      type: object
      properties:
        orderedReactivePolicies:
          type: array
          items:
            $ref: '#/components/schemas/reactivePolicy'
        srcAssetInfo:
          $ref: '#/components/schemas/asset'
        dstAssetInfo:
          $ref: '#/components/schemas/asset'
    otAssetBody:
      type: object
      properties:
        ipv4:
          type: string
          format: ipv4
        type:
          type: number
          enum:
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
        displayName:
          type: string
      required:
        - ipv4
        - type
        - displayName
      title: otAssetBody
      x-examples:
        example-1:
          value:
            ipv4: 192.168.0.1
            type: 4
            displayName: string
    otAssetEditBody:
      type: object
      properties:
        type:
          type: number
          enum:
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
        displayName:
          type: string
      required:
        - type
        - displayName
      title: otAssetEditBody
    portsList:
      type: array
      items:
        type: object
        properties:
          ports:
            type: string
          protocolType:
            type: integer
            format: int32
    portSummary:
      type: object
      properties:
        count:
          type: integer
        port:
          type: object
          properties:
            protocol:
              type: integer
            port:
              type: integer
    privateNetworksList:
      description: Collection of IP subnets that are internal
      type: array
      items:
        type: string
        example: 192.168.0.0/24
    PrivilegedPorts:
      type: string
      x-example: '1,3,4,5-8'
    processSummary:
      type: object
      properties:
        count:
          type: integer
        name:
          type: string
    protectionPoliciesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/protectionPolicy'
    protectionPolicy:
      type: object
      properties:
        id:
          type: string
        groupId:
          type: string
        initialProtectAt:
          $ref: '#/components/schemas/epochMillis'
        minQueueDays:
          type: integer
        createdBy:
          $ref: '#/components/schemas/createdBy'
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        groupInfo:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            domain:
              type: string
            hasProtectionPolicy:
              type: boolean
    protectionPolicyBody:
      type: object
      properties:
        groupId:
          type: string
        description:
          type: string
        initialQueueDays:
          type: integer
          default: 30
          maximum: 30
          minimum: 0
        minQueueDays:
          type: integer
          default: 30
          maximum: 30
          minimum: 0
      required:
        - groupId
        - initialQueueDays
        - minQueueDays
    protectionPolicyResponse:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/protectionPolicy'
    protectionPolicyUpdateBody:
      type: object
      properties:
        minQueueDays:
          type: integer
          default: 30
          maximum: 30
          minimum: 0
    protectionState:
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
    queueBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        queueDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
      required:
        - items
        - queueDays
    queueExtendBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        extendByDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
        relearnReason:
          type: string
      required:
        - items
        - extendByDays
    requestedFilter:
      type: object
      properties:
        id:
          type: string
        excludeValues:
          type: array
          items:
            type: string
        includeValues:
          type: array
          items:
            type: string
      required:
        - id
      title: requestedFilter
    role:
      description: |
        dictionary:
          * `0` ROLE_UNSPECIFIED 
          * `1` ROLE_ADMIN
          * `2` ROLE_VIEWER 
          * `3` ROLE_REGULAR  
          * `4` ROLE_MACHINE_FULL_ACCESS
          * `5` ROLE_MACHINE_READ_ONLY 
          * `6` ROLE_SELF_SERVICE 
          * `7` ROLE_CLOUD_CONNECTOR_PROVISIONING
          * `8` ROLE_JAMF_ASSET
          * `9` ROLE_ASSET_MANAGER
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
    roleBody:
      type: object
      properties:
        role:
          description: '1 - Viewer, 2 - Admin'
          type: integer
    roleCandidatesList:
      type: object
      properties:
        items:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/group'
              - $ref: '#/components/schemas/user'
        scrollCursor:
          type: string
    rolesList:
      type: object
      properties:
        items:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/group'
              - $ref: '#/components/schemas/user'
        scrollCursor:
          type: string
    rpcActivitiesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/rpcActivity'
        scrollCursor:
          type: string
    rpcActivity:
      type: object
      properties:
        timestamp:
          $ref: '#/components/schemas/epochMillis'
        trafficType:
          type: integer
        protocolType:
          type: integer
        userName:
          type: string
        interfaceUuid:
          type: string
        opNumber:
          type: integer
        status:
          type: integer
        srcAsset:
          type: object
          properties:
            assetId:
              type: string
            assetSrc:
              type: integer
            assetProtectionState:
              type: integer
            assetType:
              type: integer
            fqdn:
              type: string
            ip:
              type: string
        srcPort:
          type: integer
        dstAsset:
          type: object
          properties:
            assetId:
              type: string
            assetSrc:
              type: integer
            assetProtectionState:
              type: integer
            assetType:
              type: integer
            fqdn:
              type: string
            ip:
              type: string
        dstEndpoint:
          type: object
          properties:
            port:
              type: integer
        dstEventRecordId:
          type: integer
          format: int64
        dstProcessId:
          type: integer
        dstProcessNames:
          type: string
        dstProcessPath:
          type: string
    rpcFiltersList:
      type: object
      items:
        $ref: '#/components/schemas/rpcFilter'
    rpcFilter:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        placeholder:
          type: string
        disableExcludeSupport:
          type: boolean
        enableBulkSelection:
          type: boolean
        allowedCharactersRegex:
          type: string
        selections:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
    rule:
      type: object
      properties:
        action:
          type: integer
          format: int32
        activitiesCount:
          type: integer
          format: int32
        approvedAt:
          $ref: '#/components/schemas/epochMillis'
        approvedBy:
          $ref: '#/components/schemas/idNamePair'
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/createdBy'
        description:
          type: string
        direction:
          type: integer
          format: int32
        excludedEntityInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        excludedLocalIdsList:
          type: array
          items:
            type: string
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        id:
          type: string
        localEntityId:
          type: string
        localEntityInfo:
          $ref: '#/components/schemas/idNamePair'
        localProcessesList:
          type: array
          items:
            type: string
        parentId:
          type: string
        parentType:
          type: integer
          format: int32
        portsList:
          $ref: '#/components/schemas/portsList'
        remoteEntityIdsList:
          type: array
          items:
            type: string
        remoteEntityInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        ruleclass:
          type: integer
          format: int32
        state:
          type: integer
          format: int32
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          $ref: '#/components/schemas/idNamePair'
      title: ''
    ruleBody:
      type: object
      properties:
        description:
          type: string
        excludedLocalIdsList:
          type: array
          items:
            type: string
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        localEntityId:
          type: string
        localProcessesList:
          type: array
          items:
            type: string
        portsList:
          $ref: '#/components/schemas/portsList'
        remoteEntityIdsList:
          type: array
          items:
            type: string
        state:
          description: '1=Enabled, 2=Disabled'
          type: integer
          enum:
            - 1
            - 2
      required:
        - expiresAt
        - localEntityId
        - localProcessesList
        - portsList
        - remoteEntityIdsList
        - state
    ruleReviewApproveWithChanges:
      description: Mandatory object for rule review approve_with_changes / reject.
      type: object
      properties:
        review:
          $ref: '#/components/schemas/ruleReviewReason'
        ruleInfo:
          $ref: '#/components/schemas/ruleReviewBody'
      required:
        - review
        - ruleInfo
      x-examples:
        example-1:
          review:
            reason: 4
          ruleInfo:
            action: 0
            description: string
            direction: 0
            excludedLocalIdsList:
              - string
            expiresAt: 0
            localEntityId: string
            localProcessesList:
              - string
            portsList:
              - ports: string
              - protocolType: 0
            remoteEntityIdsList:
              - string
            state: 1
            updatedAt: 0
            updatedBy:
              id: string
              name: string
    ruleReviewBody:
      type: object
      properties:
        action:
          type: integer
          format: int32
        description:
          type: string
        direction:
          description: '1 for Inbound, 2 for Outbound'
          type: integer
          format: int32
        excludedLocalIdsList:
          type: array
          items:
            type: string
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        localEntityId:
          type: string
        localProcessesList:
          type: array
          items:
            type: string
        portsList:
          $ref: '#/components/schemas/portsList'
        remoteEntityIdsList:
          type: array
          items:
            type: string
        state:
          description: '1=Enabled, 2=Disabled'
          type: integer
          enum:
            - 1
            - 2
      required:
        - action
        - direction
        - expiresAt
        - localEntityId
        - localProcessesList
        - portsList
        - remoteEntityIdsList
        - state
    ruleReviewReason:
      description: |-
        Mandatory object for rule review approve_with_changes / reject.

        reason: {
            HUMAN_TRAFFIC_COVERED_BY_MFA = 1,
            TIGHTEN_RULE_SCOPE = 2,
            MISSING_PORT_OR_PROCESS = 3,
            AFFECTED_ENTITIES_CONTAINED_IN_AN_EXISTING_GROUP = 4,
            REDUNDANT_RULE = 5,
            TRAFFIC_SHOULD_BE_BLOCKED = 6,
            OTHER = 7
        }
      type: object
      properties:
        reason:
          type: integer
        details:
          description: 'Optional if reason != OTHER(7), mandatory if reason == OTHER(7)'
          type: string
      required:
        - reason
      x-examples:
        example-1:
          review:
            reason: 7
            details: 'reason == 7 means OTHER, so details field is mandatory'
        example-2:
          review:
            reason: 2
    ruleDistribution:
      type: array
      items:
        $ref: '#/components/schemas/distribution'
    ruleItem:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/rule'
    ruleMatch:
      type: object
      properties:
        ruleId:
          description: Id of the Rule
          type: string
          format: uuid
          example: b4565b6b-d20f-407d-9075-e354da6ffc64
        updateId:
          type: number
    ruleResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/rule'
    rulesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/rule'
    ruleStatistics:
      type: object
      properties:
        aiStatistics:
          $ref: '#/components/schemas/ruleStatisticsType'
        mfaStatistics:
          $ref: '#/components/schemas/ruleStatisticsType'
        sspStatistics:
          $ref: '#/components/schemas/ruleStatisticsType'
        portalStatistics:
          $ref: '#/components/schemas/ruleStatisticsType'
    ruleStatisticsType:
      type: object
      properties:
        inboundAllowEnabledCount:
          type: integer
        inboundAllowDisabledCount:
          type: integer
        inboundBlockEnabledCount:
          type: integer
        inboundBlockDisabledCount:
          type: integer
        outboundAllowEnabledCount:
          type: integer
        outboundAllowDisabledCount:
          type: integer
        outboundBlockEnabledCount:
          type: integer
        outboundBlockDisabledCount:
          type: integer
    session:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/asset'
        clientPrivateIp:
          type: string
          format: ipv4
        clientVersion:
          type: string
        connectedSince:
          $ref: '#/components/schemas/epochMillis'
        connectionState:
          type: integer
        currentPublicIp:
          type: string
          format: ipv4
        id:
          type: string
        createdAt:
          $ref: "#/components/schemas/epochMillis"
        lastLogon:
          $ref: '#/components/schemas/epochMillis'
        roleId:
          type: string
        server:
          $ref: '#/components/schemas/idNamePair'
        user:
          $ref: '#/components/schemas/idNamePair'
        connectivityStateAfterReboot:
          $ref: '#/components/schemas/connectivityStateAfterReboot'
    sessionsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/session'
    settingsActivities:
      type: object
      properties:
        config:
          type: object
          properties:
            shouldFilterExternalTraffic:
              description: Disable/Enable external traffic collection
              type: boolean
    settingsActivitiesBody:
      type: object
      properties:
        shouldFilterExternalTraffic:
          description: Disable/Enable external traffic collection
          type: boolean
      required:
        - shouldFilterExternalTraffic
    settingsAuth:
      type: object
      properties:
        item:
          type: object
          properties:
            portalTokenTtl:
              description: Portal session token timeout (in minutes)
              type: number
      title: settingsAuth
    settingsAuthBody:
      type: object
      properties:
        portalTokenTtl:
          description: Portal session token timeout (in minutes)
          type: number
      title: settingsAuthBody
    settingsAdAutomationGroupsBody:
      type: object
      properties:
        monitoredGroupId:
          type: string
        protectedGroupId:
          type: string
    settingsAdForest:
      type: object
      properties:
        forestId:
          type: string
        activeDirectoryInfo:
          $ref: '#/components/schemas/settingsAdInfo'
        automationGroups:
          $ref: '#/components/schemas/settingsProtectionAutomationResponse'
        secondaryDomains:
          type: array
          items:
            $ref: '#/components/schemas/settingsAdSecondary'
    settingsAdInfo:
      type: object
      properties:
        username:
          description: Service Account for Zero Networks
          type: string
          example: znremotemanagement
        domainName:
          description: FQDN of the AD domain
          type: string
          example: zeronetworks.com
        domainControllerFqdn:
          description: Domain Controller from AD Domain
          type: string
          example: dc.zeronetworks.com
        useLdaps:
          description: Use LDAP or LDAPs
          type: boolean
    settingsAdInfoBodySet:
      type: object
      required:
        - setActiveDirectoryInfo
      properties:
        setActiveDirectoryInfo:
          $ref: '#/components/schemas/settingsAdInfoBody'
    settingsAdInfoBody:
      type: object
      properties:
        activeDirectoryInfo:
          type: object
          properties:
            username:
              description: Service Account for Zero Networks
              type: string
              example: znremotemanagement
            domainName:
              description: FQDN of the AD domain
              type: string
              example: zeronetworks.com
            domainControllerFqdn:
              description: Domain Controller from AD Domain
              type: string
              example: dc.zeronetworks.com
            useLdaps:
              description: Use LDAP or LDAPs
              type: boolean
          required:
            - username
            - domainName
            - domainControllerFqdn
            - useLdaps
        passwordCleartext:
          description: Service Acount Password
          type: string
      required:
        - activeDirectoryInfo
        - passwordCleartext
    settingsAdInfoResponse:
      type: object
      properties:
        forests:
          type: array
          items:
            $ref: '#/components/schemas/settingsAdForest'
    settingsAdInfoSecondaryBody:
      type: object
      properties:
        dc:
          description: The domain controller
          type: string
          example: dc.child.zeronetworks.com
      required:
        - dc
    settingsAdSecondary:
      type: object
      properties:
        dc:
          type: string
          example: dc.child.zeronetworks.com
        domain:
          type: string
          example: child.zeronetworks.com
      required:
        - dc
        - domain
    settingsAiRuleReview:
      type: object
      properties:
        ruleClassesList:
          type: array
          items:
            type: integer
        postponeProtection:
          type: boolean
      x-examples:
        example-1:
          ruleClassesList:
            - 1
            - 6
    settingsAnsible:
      type: object
      properties:
        clientId:
          description: OAuth Client Id
          type: string
        credentialsName:
          description: Name of the creds used to instruct Ansible to connect to linux machines
          type: string
        disableCertificateValidation:
          description: Control certificate validation
          type: boolean
        url:
          description: URL of the Ansible server
          type: string
        username:
          description: username to access Ansible API.
          type: string
    settingsAnsibleBody:
      type: object
      properties:
        clientId:
          description: OAuth Client Id
          type: string
        credentialsName:
          description: Name of the creds used to instruct Ansible to connect to linux machines
          type: string
        disableCertificateValidation:
          description: Control certificate validation
          type: boolean
        password:
          description: password to access Ansible API
          type: string
        url:
          description: URL of the Ansible server
          type: string
        username:
          description: username to access Ansible API.
          type: string
        clientSecret:
          description: OAuth Client Secret
          type: string
      required:
        - clientId
        - credentialsName
        - disableCertificateValidation
        - password
        - url
        - username
        - clientSecret
    settingsAssetsManagersBody:
      type: object
      properties:
        entityIds:
          type: array
          items:
            $ref: '#/components/schemas/groupIdOrAssetId'
        managerIds:
          type: array
          items:
            $ref: '#/components/schemas/groupIdOrUserId'
    settingsAzureAd:
      type: object
      properties:
        clientId:
          type: string
          format: uuid
        clientSecret:
          type: string
        tenantId:
          type: string
          format: uuid
    settingsAzureAdBody:
      type: object
      properties:
        clientId:
          type: string
          format: uuid
        clientSecret:
          type: string
        tenantId:
          type: string
          format: uuid
    settingsConnectClientAutoUpdate:
      type: object
      properties:
        clientAutoUpdate:
          type: boolean
    settingsConnectClientAutoUpdateBody:
      type: object
      properties:
        clientAutoUpdate:
          type: boolean
      required:
        - clientAutoUpdate
    settingsClusterStrategy:
      type: object
      properties:
        preferredDeploymentId:
          type: string
        strategy:
          type: integer
    settingsClusterStrategyBody:
      type: object
      properties:
        preferredDeploymentId:
          type: string
      required:
        - preferredDeploymentId
    settingsIdp:
      type: object
      properties:
        certificate:
          description: Identity Provider certificate
          type: string
        createdAt:
          $ref: '#/components/schemas/iso8601DateTimeUTC'
        createdBy:
          type: string
          format: uuid
        identityProviderType:
          type: string
          enum:
            - azure
            - custom
            - cyberark
            - duo
            - okta
        isDefault:
          description: Set as the default authentication method
          type: boolean
        sloUrl:
          description: Single Log out url
          type: string
        ssoUrl:
          description: Single sign on url
          type: string
        updatedAt:
          $ref: '#/components/schemas/iso8601DateTimeUTC'
        updatedBy:
          type: string
          format: uuid
    settingsIdpBody:
      type: object
      properties:
        certificate:
          description: Identity Provider certificate
          type: string
        identityProvider:
          type: string
          enum:
            - azure
            - custom
            - cyberark
            - duo
            - okta
        isDefault:
          description: Set as the default authentication method
          type: boolean
        sloUrl:
          description: Single Log out url
          type: string
        ssoUrl:
          description: Single sign on url
          type: string
      required:
        - certificate
        - identityProvider
        - isDefault
        - sloUrl
        - ssoUrl
    settingsIdpList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/settingsIdp'
    settingsIdpDefaultApplication:
      type: object
      properties:
        application:
          description: '1-Admin Portal, 2-Access Portal'
          type: integer
          enum:
            - 1
            - 2
    settingsIdpDefaultApplicationBody:
      type: object
      properties:
        application:
          description: '1-Admin Portal, 2-Access Portal'
          type: integer
          enum:
            - 1
            - 2
      required:
        - application
    settingsFirewall:
      type: object
      properties:
        implicitIcmpRuleEnabled:
          type: boolean
    settingsFirewallBody:
      type: object
      properties:
        implicitIcmpRuleEnabled:
          type: boolean
      required:
        - implicitIcmpRuleEnabled
    settingsFirewallIgnoredGPO:
      type: object
      properties:
        inboundList:
          type: array
          items:
            type: string
        outboundList:
          type: array
          items:
            type: string
    settingsFirewallIgnoredGPOBody:
      type: object
      properties:
        inboundList:
          type: array
          items:
            type: string
        outboundList:
          type: array
          items:
            type: string
    settingsFirewallIgnoredRules:
      type: object
      properties:
        inboundList:
          type: array
          items:
            type: string
        outboundList:
          type: array
          items:
            type: string
    settingsFirewallIgnoredRulesBody:
      type: object
      properties:
        inboundList:
          type: array
          items:
            type: string
        outboundList:
          type: array
          items:
            type: string
    settingsFirewallProfiles:
      type: object
      properties:
        inboundAllow:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
        inboundBlock:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
        outboundBlock:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
    settingsFirewallProfilesBody:
      type: object
      properties:
        inboundAllow:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
          required:
            - domain
            - private
            - public
        inboundBlock:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
          required:
            - domain
            - private
            - public
        outboundBlock:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
          required:
            - domain
            - private
            - public
      required:
        - inboundAllow
        - inboundBlock
        - outboundBlock
    settingsInternalSubnets:
      type: object
      properties:
        config:
          type: object
          properties:
            privateNetworksList:
              $ref: '#/components/schemas/privateNetworksList'
    settingsInternalSubnetsBody:
      type: object
      properties:
        privateNetworksList:
          $ref: '#/components/schemas/privateNetworksList'
      required:
        - privateNetworksList
    settingsJamfCredentials:
      type: object
      properties:
        host:
          description: JAMF url
          type: string
        password:
          type: string
        username:
          description: JAMF username
          type: string
    settingsJamfCredentialsBody:
      type: object
      properties:
        host:
          description: JAMF url
          type: string
        password:
          description: JAMF Password
          type: string
        username:
          description: JAMF username
          type: string
      required:
        - host
        - password
        - username
    settingsLearningConfig:
      type: object
      properties:
        allowQueueForever:
          type: boolean
        allowQuickLearning:
          type: boolean
    settingsLearningConfigBody:
      type: object
      required:
        - allowQueueForever
        - allowQuickLearning
      properties:
        allowQueueForever:
          type: boolean
        allowQuickLearning:
          type: boolean
    settingsLinuxSetup:
      type: object
      properties:
        allowInstallPackages:
          type: boolean
    settingsLinuxSetupBody:
      type: object
      required:
        - allowInstallPackages
      properties:
        allowInstallPackages:
          type: boolean
    settingsLinuxUser:
      type: object
      properties:
        username:
          description: The linux username for ssh
          type: string
    settingsLinuxUserBody:
      type: object
      properties:
        password:
          description: password for the linux user
          type: string
        privateKey:
          description: private key for the linux user
          type: string
        username:
          description: the linux user name
          type: string
      required:
        - password
        - privateKey
        - username
    settingsNotification:
      type: object
      properties:
        assetProtected:
          description: Notify asset added to protection
          type: boolean
        assetQueued:
          description: Notify asset added to learning
          type: boolean
        assetUnprotected:
          description: Notify asset removed from protection
          type: boolean
        assetPostponed:
          description: Notify asset protection postponed
          type: boolean
    settingsNotificationBody:
      type: object
      properties:
        assetProtected:
          description: Notify asset added to protection
          type: boolean
        assetQueued:
          description: Notify asset added to learning
          type: boolean
        assetUnprotected:
          description: Notify asset removed from protection
          type: boolean
        assetPostponed:
          type: boolean
      required:
        - assetProtected
        - assetQueued
        - assetUnprotected
        - assetPostponed
    settingsMfaAuthentication:
      type: object
      properties:
        isRequiresAuth:
          description: Authentication Reqiured
          type: boolean
        isSsoForceAuth:
          description: Force sso authentication
          type: boolean
        tokenTtl:
          description: Token time to tive in minutes
          type: integer
          example: 1440
    settingsMfaAuthenticationBody:
      type: object
      properties:
        isRequiresAuth:
          description: Authentication Reqiured
          type: boolean
        isSsoForceAuth:
          description: Force sso authentication
          type: boolean
        tokenTtl:
          description: Token time to tive in minutes
          type: integer
          example: 1440
      required:
        - isRequiresAuth
        - isSsoForceAuth
        - tokenTtl
    settingsMfaAuthenticationResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/settingsMfaAuthentication'
    settingsMfaDetection:
      type: object
      properties:
        timeoutMinutes:
          description: access policy cooldown
          type: integer
          example: 5
    settingsMfaDetectionBody:
      type: object
      properties:
        timeoutMinutes:
          description: access policy cooldown
          type: integer
          example: 5
      required:
        - timeoutMinutes
    settingsMfaDetectionResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/settingsMfaDetection'
    settingsPrivilegedPorts:
      type: object
      properties:
        item:
          type: object
          properties:
            tcpPorts:
              $ref: '#/components/schemas/PrivilegedPorts'
            UdpPorts:
              $ref: '#/components/schemas/PrivilegedPorts'
    settingsPrivilegedPortsBody:
      type: object
      required:
        - tcpPorts
        - udpPorts
      properties:
        tcpPorts:
          $ref: '#/components/schemas/PrivilegedPorts'
        UdpPorts:
          $ref: '#/components/schemas/PrivilegedPorts'
    settingsProtectionAutomationResponse:
      type: object
      properties:
        monitoredGroup:
          $ref: '#/components/schemas/groupCandidate'
        protectedGroup:
          $ref: '#/components/schemas/groupCandidate'
    settingsPushNotificaitions:
      type: object
      properties:
        host:
          type: string
        id:
          type: string
        identityProvider:
          type: string
    settingsPushNotificaitionsBody:
      type: object
      properties:
        host:
          description: empty for microsoftAuthentictor
          type: string
        id:
          type: string
        identityProvider:
          type: string
        secretKey:
          type: string
      required:
        - id
        - identityProvider
        - secretKey
    settingsPushNotificaitionsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/settingsPushNotificaitions'
    settingsTrustedInternetAddresses:
      type: object
      properties:
        config:
          type: object
          properties:
            externalIpsList:
              $ref: '#/components/schemas/externalIpsList'
    settingsTrustedInternetAddressesBody:
      type: object
      properties:
        externalIpsList:
          $ref: '#/components/schemas/externalIpsList'
      required:
        - externalIpsList
    settingsZpa:
      type: object
      properties:
        config:
          type: object
          properties:
            isEnabled:
              type: boolean
            clientOutboundSubnet:
              $ref: '#/components/schemas/ipSubnet'
            gatewayIpsList:
              type: array
              items:
                type: string
                pattern: '^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$'
            portsToMfaTcp:
              type: string
              pattern: '^((\\d{1,5}-\\d{1,5})|\\d{1,5})(,(\\d{1,5}-\\d{1,5})|,\\d{1,5})*$'
            portsToMfaUdp:
              type: string
              pattern: '^((\\d{1,5}-\\d{1,5})|\\d{1,5})(,(\\d{1,5}-\\d{1,5})|,\\d{1,5})*$'
    settingsZpaBody:
      type: object
      required:
       - isEnabled
       - clientOutboundSubnet
       - gatewayIpsList
       - portsToMfaTcp
       - portsToMfaUdp
      properties:
        isEnabled:
          type: boolean
        clientOutboundSubnet:
          $ref: '#/components/schemas/ipSubnet'
        gatewayIpsList:
          type: array
          items:
            type: string
            pattern: '^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$'
        portsToMfaTcp:
          type: string
          pattern: '^((\\d{1,5}-\\d{1,5})|\\d{1,5})(,(\\d{1,5}-\\d{1,5})|,\\d{1,5})*$'
        portsToMfaUdp:
          type: string
          pattern: '^((\\d{1,5}-\\d{1,5})|\\d{1,5})(,(\\d{1,5}-\\d{1,5})|,\\d{1,5})*$'
    srcUserCandidate:
      type: object
      properties:
        domain:
          type: string
        id:
          type: string
        name:
          type: string
    srcUserCandidatesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/srcUserCandidate'
        scrollCursor:
          type: string
    state:
      type: object
      properties:
        assetId:
          type: string
        isAssetConnected:
          type: boolean
        lasDisconnectedAt:
          description: epoch timestamp
          type: integer
        protectAt:
          $ref: '#/components/schemas/epochMillis'
        protectionState:
          $ref: "#/components/schemas/protectionState"
    tags:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/group'
    user:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        distinguishedName:
          type: string
        domain:
          type: string
        email:
          type: string
        firstName:
          type: string
        guid:
          type: string
        id:
          type: string
        jobTitle:
          type: string
        lastName:
          type: string
        name:
          type: string
        officePhone:
          type: string
        phone:
          type: string
        role:
          type: integer
        sid:
          type: string
        source:
          type: integer
        userPrincipleName:
          type: string
        userType:
          type: integer
    userSimple:
      type: object
      properties:
        domain:
          type: string
        email:
          type: string
        id:
          type: string
        name:
          type: string
    userIdResponse:
      type: object
      properties:
        userId:
          type: string
      x-examples:
        example-1:
          userId: 'u:a:tOUovcIQ'
    userResponse:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/user'
    usersList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/user'
    userSummary:
      type: object
      properties:
        count:
          type: integer
        id:
          type: string
        name:
          type: string
    userStatistics:
      type: object
      properties:
        userStatistics:
          type: object
          properties:
            totalCount:
              type: integer
            adminsCount:
              type: integer
            viewersCount:
              type: integer
      x-examples:
        example-1:
          userStatistics:
            totalCount: 87
            adminsCount: 14
            viewersCount: 6
    validateResponse:
      type: object
      properties:
        affectedAssetsCount:
          type: integer
  responses:
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    '409':
      description: Already exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    '500':
      description: Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
  securitySchemes:
    api_key:
      type: apiKey
      name: Authorization
      in: header
tags:
  - name: Activities
    description: API calls related to Activities.
  - name: Assets
    description: API calls related to Assets.
  - name: Assets Learning
    description: API calls related to Assets in Learning.
  - name: Assets Linux
    description: API calls related to Linux Assets.
  - name: Assets Monitored
    description: API calls related to Monitored Assets.
  - name: Assets OT/IoT
    description: API calls related to OT/IoT Assets.
  - name: Assets Protected
    description: API calls related to Protected Assets.
  - name: Audit
    description: API calls releated to Audits.
  - name: Auth
    description: API calls releated to Authentication.
  - name: Entity
    description: API calls related to Entities.
  - name: Groups
    description: API calls related to Groups.
  - name: Groups Active Directory
    description: API calls related to Active Directory Groups.
  - name: Groups Ai
    description: API calls related to AI Groups
  - name: Groups Custom
    description: API calls related to Custom Groups.
  - name: Groups OT/IoT
    description: API calls related to OT/IoT Groups.
  - name: Groups Tags
    description: API calls related to Tag Groups.
  - name: Groups System
    description: API calls related to System Groups.
  - name: MFA
    description: API calls related to MFA policies.
  - name: MFA Inbound
    description: API calls related to Inbound MFA policies.
  - name: MFA Outbound
    description: API calls related to Outbound MFA policies.
  - name: Protection Policies
    description: API calls related to Protection Policies.
  - name: Profile
    description: API calls related to profile.
  - name: Rules
    description: API calls related to Rules.
  - name: Rules Inbound Allow
    description: API calls related to Inbound Allow rules.
  - name: Rules Inbound Block
    description: API calls related to Inbound Block rules.
  - name: Rules Outbound Allow
    description: API calls related to Outbound Allow rules.
  - name: Rules Outbound Block
    description: API calls related to Outbound Block rules.
  - name: Sessions
    description: API calls releated to Sessions.
  - name: Settings
    description: API calls related to Settings.
  - name: Settings Access Tokens
    description: API calls related to Access Tokens settings.
  - name: Settings Activities
    description: API calls related to Activities settings.
  - name: Settings AI
    description: API calls related to AI settings.
  - name: Settings AI Learning
    description: API calls related to AI Learning settings.
  - name: Settings AI Rules Review
    description: API calls related to AI Rule Review settings.
  - name: Settings Asset Management
    description: API calls related to Asset Managment settings.
  - name: Settings Asset Managers
    description: API calls related to Asset Managers settings.
  - name: Settings Cloud Connector
    description: API calls releated to Cloud Connector settings.
  - name: Settings Connect
    description: API calls related to Connect settings.
  - name: Settings Firewall
    description: API calls related to Firewall settings.
  - name: Settings Identity Providers
    description: API calls related to Identity Providers settings.
  - name: Settings Internal Subnets
    description: API Calls related to Internal Subnets settings.
  - name: Settings Learning
    description: API calls related to AI Learning settings.
  - name: Settings Mail Notifications
    description: API calls related to Mail Notifications settings.
  - name: Settings MFA
    description: API Calls related to MFA settings.
  - name: Settings Portal Security
    description: API calls related to Portal Security settings.
  - name: Settings Privileged Ports
    description: API calls related to Privleged Ports settings.
  - name: Settings Protection Automation
    description: API calls related to Protection Automation settings.
  - name: Settings Push Notifications
    description: API calls related to Push Notifications settings.
  - name: Settings Roles
    description: API calls related to Roles settings.
  - name: Settings Trusted Internet
    description: API calles related to Trust Internet Settings
  - name: Settings ZPA
    description: API calls related to ZPA Settings.
  - name: Users
    description: API calls releated to Users.
security:
  - api_key: []
